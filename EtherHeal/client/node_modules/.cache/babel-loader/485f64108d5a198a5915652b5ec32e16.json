{"ast":null,"code":"'use strict';\n\nconst promisify = require('promisify-es6');\n\nconst CID = require('cids');\n\nmodule.exports = send => {\n  return promisify((cids, opts, callback) => {\n    if (typeof opts === 'function' && !callback) {\n      callback = opts;\n      opts = {};\n    } // opts is the real callback --\n    // 'callback' is being injected by promisify\n\n\n    if (typeof opts === 'function' && typeof callback === 'function') {\n      callback = opts;\n      opts = {};\n    }\n\n    if (!Array.isArray(cids)) {\n      cids = [cids];\n    } // Validate CID(s) and serialize\n\n\n    try {\n      cids = cids.map(cid => new CID(cid).toBaseEncodedString('base58btc'));\n    } catch (err) {\n      return callback(err);\n    }\n\n    send({\n      path: 'dht/provide',\n      args: cids,\n      qs: opts\n    }, callback);\n  });\n};","map":{"version":3,"sources":["Z:/Projects/EtherealOrgan/Complete Project/client/node_modules/ipfs-api/src/dht/provide.js"],"names":["promisify","require","CID","module","exports","send","cids","opts","callback","Array","isArray","map","cid","toBaseEncodedString","err","path","args","qs"],"mappings":"AAAA;;AAEA,MAAMA,SAAS,GAAGC,OAAO,CAAC,eAAD,CAAzB;;AACA,MAAMC,GAAG,GAAGD,OAAO,CAAC,MAAD,CAAnB;;AAEAE,MAAM,CAACC,OAAP,GAAkBC,IAAD,IAAU;AACzB,SAAOL,SAAS,CAAC,CAACM,IAAD,EAAOC,IAAP,EAAaC,QAAb,KAA0B;AACzC,QAAI,OAAOD,IAAP,KAAgB,UAAhB,IAA8B,CAACC,QAAnC,EAA6C;AAC3CA,MAAAA,QAAQ,GAAGD,IAAX;AACAA,MAAAA,IAAI,GAAG,EAAP;AACD,KAJwC,CAMzC;AACA;;;AACA,QAAI,OAAOA,IAAP,KAAgB,UAAhB,IAA8B,OAAOC,QAAP,KAAoB,UAAtD,EAAkE;AAChEA,MAAAA,QAAQ,GAAGD,IAAX;AACAA,MAAAA,IAAI,GAAG,EAAP;AACD;;AAED,QAAI,CAACE,KAAK,CAACC,OAAN,CAAcJ,IAAd,CAAL,EAA0B;AACxBA,MAAAA,IAAI,GAAG,CAACA,IAAD,CAAP;AACD,KAfwC,CAiBzC;;;AACA,QAAI;AACFA,MAAAA,IAAI,GAAGA,IAAI,CAACK,GAAL,CAASC,GAAG,IAAI,IAAIV,GAAJ,CAAQU,GAAR,EAAaC,mBAAb,CAAiC,WAAjC,CAAhB,CAAP;AACD,KAFD,CAEE,OAAOC,GAAP,EAAY;AACZ,aAAON,QAAQ,CAACM,GAAD,CAAf;AACD;;AAEDT,IAAAA,IAAI,CAAC;AACHU,MAAAA,IAAI,EAAE,aADH;AAEHC,MAAAA,IAAI,EAAEV,IAFH;AAGHW,MAAAA,EAAE,EAAEV;AAHD,KAAD,EAIDC,QAJC,CAAJ;AAKD,GA7Be,CAAhB;AA8BD,CA/BD","sourcesContent":["'use strict'\n\nconst promisify = require('promisify-es6')\nconst CID = require('cids')\n\nmodule.exports = (send) => {\n  return promisify((cids, opts, callback) => {\n    if (typeof opts === 'function' && !callback) {\n      callback = opts\n      opts = {}\n    }\n\n    // opts is the real callback --\n    // 'callback' is being injected by promisify\n    if (typeof opts === 'function' && typeof callback === 'function') {\n      callback = opts\n      opts = {}\n    }\n\n    if (!Array.isArray(cids)) {\n      cids = [cids]\n    }\n\n    // Validate CID(s) and serialize\n    try {\n      cids = cids.map(cid => new CID(cid).toBaseEncodedString('base58btc'))\n    } catch (err) {\n      return callback(err)\n    }\n\n    send({\n      path: 'dht/provide',\n      args: cids,\n      qs: opts\n    }, callback)\n  })\n}\n"]},"metadata":{},"sourceType":"script"}