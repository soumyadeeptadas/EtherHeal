{"ast":null,"code":"'use strict';\n\nconst {\n  Buffer\n} = require('buffer');\n\nconst ieee754 = require('ieee754');\n\nconst Bignumber = require('bignumber.js').BigNumber;\n\nconst parser = require('./decoder.asm');\n\nconst utils = require('./utils');\n\nconst c = require('./constants');\n\nconst Simple = require('./simple');\n\nconst Tagged = require('./tagged');\n\nconst {\n  URL\n} = require('iso-url');\n/**\n * Transform binary cbor data into JavaScript objects.\n */\n\n\nclass Decoder {\n  /**\n   * @param {Object} [opts={}]\n   * @param {number} [opts.size=65536] - Size of the allocated heap.\n   */\n  constructor(opts) {\n    opts = opts || {};\n\n    if (!opts.size || opts.size < 0x10000) {\n      opts.size = 0x10000;\n    } else {\n      // Ensure the size is a power of 2\n      opts.size = utils.nextPowerOf2(opts.size);\n    } // Heap use to share the input with the parser\n\n\n    this._heap = new ArrayBuffer(opts.size);\n    this._heap8 = new Uint8Array(this._heap);\n    this._buffer = Buffer.from(this._heap);\n\n    this._reset(); // Known tags\n\n\n    this._knownTags = Object.assign({\n      0: val => new Date(val),\n      1: val => new Date(val * 1000),\n      2: val => utils.arrayBufferToBignumber(val),\n      3: val => c.NEG_ONE.minus(utils.arrayBufferToBignumber(val)),\n      4: v => {\n        // const v = new Uint8Array(val)\n        return c.TEN.pow(v[0]).times(v[1]);\n      },\n      5: v => {\n        // const v = new Uint8Array(val)\n        return c.TWO.pow(v[0]).times(v[1]);\n      },\n      32: val => new URL(val),\n      35: val => new RegExp(val)\n    }, opts.tags); // Initialize asm based parser\n\n    this.parser = parser(global, {\n      // eslint-disable-next-line no-console\n      log: console.log.bind(console),\n      pushInt: this.pushInt.bind(this),\n      pushInt32: this.pushInt32.bind(this),\n      pushInt32Neg: this.pushInt32Neg.bind(this),\n      pushInt64: this.pushInt64.bind(this),\n      pushInt64Neg: this.pushInt64Neg.bind(this),\n      pushFloat: this.pushFloat.bind(this),\n      pushFloatSingle: this.pushFloatSingle.bind(this),\n      pushFloatDouble: this.pushFloatDouble.bind(this),\n      pushTrue: this.pushTrue.bind(this),\n      pushFalse: this.pushFalse.bind(this),\n      pushUndefined: this.pushUndefined.bind(this),\n      pushNull: this.pushNull.bind(this),\n      pushInfinity: this.pushInfinity.bind(this),\n      pushInfinityNeg: this.pushInfinityNeg.bind(this),\n      pushNaN: this.pushNaN.bind(this),\n      pushNaNNeg: this.pushNaNNeg.bind(this),\n      pushArrayStart: this.pushArrayStart.bind(this),\n      pushArrayStartFixed: this.pushArrayStartFixed.bind(this),\n      pushArrayStartFixed32: this.pushArrayStartFixed32.bind(this),\n      pushArrayStartFixed64: this.pushArrayStartFixed64.bind(this),\n      pushObjectStart: this.pushObjectStart.bind(this),\n      pushObjectStartFixed: this.pushObjectStartFixed.bind(this),\n      pushObjectStartFixed32: this.pushObjectStartFixed32.bind(this),\n      pushObjectStartFixed64: this.pushObjectStartFixed64.bind(this),\n      pushByteString: this.pushByteString.bind(this),\n      pushByteStringStart: this.pushByteStringStart.bind(this),\n      pushUtf8String: this.pushUtf8String.bind(this),\n      pushUtf8StringStart: this.pushUtf8StringStart.bind(this),\n      pushSimpleUnassigned: this.pushSimpleUnassigned.bind(this),\n      pushTagUnassigned: this.pushTagUnassigned.bind(this),\n      pushTagStart: this.pushTagStart.bind(this),\n      pushTagStart4: this.pushTagStart4.bind(this),\n      pushTagStart8: this.pushTagStart8.bind(this),\n      pushBreak: this.pushBreak.bind(this)\n    }, this._heap);\n  }\n\n  get _depth() {\n    return this._parents.length;\n  }\n\n  get _currentParent() {\n    return this._parents[this._depth - 1];\n  }\n\n  get _ref() {\n    return this._currentParent.ref;\n  } // Finish the current parent\n\n\n  _closeParent() {\n    var p = this._parents.pop();\n\n    if (p.length > 0) {\n      throw new Error(`Missing ${p.length} elements`);\n    }\n\n    switch (p.type) {\n      case c.PARENT.TAG:\n        this._push(this.createTag(p.ref[0], p.ref[1]));\n\n        break;\n\n      case c.PARENT.BYTE_STRING:\n        this._push(this.createByteString(p.ref, p.length));\n\n        break;\n\n      case c.PARENT.UTF8_STRING:\n        this._push(this.createUtf8String(p.ref, p.length));\n\n        break;\n\n      case c.PARENT.MAP:\n        if (p.values % 2 > 0) {\n          throw new Error('Odd number of elements in the map');\n        }\n\n        this._push(this.createMap(p.ref, p.length));\n\n        break;\n\n      case c.PARENT.OBJECT:\n        if (p.values % 2 > 0) {\n          throw new Error('Odd number of elements in the map');\n        }\n\n        this._push(this.createObject(p.ref, p.length));\n\n        break;\n\n      case c.PARENT.ARRAY:\n        this._push(this.createArray(p.ref, p.length));\n\n        break;\n\n      default:\n        break;\n    }\n\n    if (this._currentParent && this._currentParent.type === c.PARENT.TAG) {\n      this._dec();\n    }\n  } // Reduce the expected length of the current parent by one\n\n\n  _dec() {\n    const p = this._currentParent; // The current parent does not know the epxected child length\n\n    if (p.length < 0) {\n      return;\n    }\n\n    p.length--; // All children were seen, we can close the current parent\n\n    if (p.length === 0) {\n      this._closeParent();\n    }\n  } // Push any value to the current parent\n\n\n  _push(val, hasChildren) {\n    const p = this._currentParent;\n    p.values++;\n\n    switch (p.type) {\n      case c.PARENT.ARRAY:\n      case c.PARENT.BYTE_STRING:\n      case c.PARENT.UTF8_STRING:\n        if (p.length > -1) {\n          this._ref[this._ref.length - p.length] = val;\n        } else {\n          this._ref.push(val);\n        }\n\n        this._dec();\n\n        break;\n\n      case c.PARENT.OBJECT:\n        if (p.tmpKey != null) {\n          this._ref[p.tmpKey] = val;\n          p.tmpKey = null;\n\n          this._dec();\n        } else {\n          p.tmpKey = val;\n\n          if (typeof p.tmpKey !== 'string') {\n            // too bad, convert to a Map\n            p.type = c.PARENT.MAP;\n            p.ref = utils.buildMap(p.ref);\n          }\n        }\n\n        break;\n\n      case c.PARENT.MAP:\n        if (p.tmpKey != null) {\n          this._ref.set(p.tmpKey, val);\n\n          p.tmpKey = null;\n\n          this._dec();\n        } else {\n          p.tmpKey = val;\n        }\n\n        break;\n\n      case c.PARENT.TAG:\n        this._ref.push(val);\n\n        if (!hasChildren) {\n          this._dec();\n        }\n\n        break;\n\n      default:\n        throw new Error('Unknown parent type');\n    }\n  } // Create a new parent in the parents list\n\n\n  _createParent(obj, type, len) {\n    this._parents[this._depth] = {\n      type: type,\n      length: len,\n      ref: obj,\n      values: 0,\n      tmpKey: null\n    };\n  } // Reset all state back to the beginning, also used for initiatlization\n\n\n  _reset() {\n    this._res = [];\n    this._parents = [{\n      type: c.PARENT.ARRAY,\n      length: -1,\n      ref: this._res,\n      values: 0,\n      tmpKey: null\n    }];\n  } // -- Interface to customize deoding behaviour\n\n\n  createTag(tagNumber, value) {\n    const typ = this._knownTags[tagNumber];\n\n    if (!typ) {\n      return new Tagged(tagNumber, value);\n    }\n\n    return typ(value);\n  }\n\n  createMap(obj, len) {\n    return obj;\n  }\n\n  createObject(obj, len) {\n    return obj;\n  }\n\n  createArray(arr, len) {\n    return arr;\n  }\n\n  createByteString(raw, len) {\n    return Buffer.concat(raw);\n  }\n\n  createByteStringFromHeap(start, end) {\n    if (start === end) {\n      return Buffer.alloc(0);\n    }\n\n    return Buffer.from(this._heap.slice(start, end));\n  }\n\n  createInt(val) {\n    return val;\n  }\n\n  createInt32(f, g) {\n    return utils.buildInt32(f, g);\n  }\n\n  createInt64(f1, f2, g1, g2) {\n    return utils.buildInt64(f1, f2, g1, g2);\n  }\n\n  createFloat(val) {\n    return val;\n  }\n\n  createFloatSingle(a, b, c, d) {\n    return ieee754.read([a, b, c, d], 0, false, 23, 4);\n  }\n\n  createFloatDouble(a, b, c, d, e, f, g, h) {\n    return ieee754.read([a, b, c, d, e, f, g, h], 0, false, 52, 8);\n  }\n\n  createInt32Neg(f, g) {\n    return -1 - utils.buildInt32(f, g);\n  }\n\n  createInt64Neg(f1, f2, g1, g2) {\n    const f = utils.buildInt32(f1, f2);\n    const g = utils.buildInt32(g1, g2);\n\n    if (f > c.MAX_SAFE_HIGH) {\n      return c.NEG_ONE.minus(new Bignumber(f).times(c.SHIFT32).plus(g));\n    }\n\n    return -1 - (f * c.SHIFT32 + g);\n  }\n\n  createTrue() {\n    return true;\n  }\n\n  createFalse() {\n    return false;\n  }\n\n  createNull() {\n    return null;\n  }\n\n  createUndefined() {\n    return undefined;\n  }\n\n  createInfinity() {\n    return Infinity;\n  }\n\n  createInfinityNeg() {\n    return -Infinity;\n  }\n\n  createNaN() {\n    return NaN;\n  }\n\n  createNaNNeg() {\n    return -NaN;\n  }\n\n  createUtf8String(raw, len) {\n    return raw.join('');\n  }\n\n  createUtf8StringFromHeap(start, end) {\n    if (start === end) {\n      return '';\n    }\n\n    return this._buffer.toString('utf8', start, end);\n  }\n\n  createSimpleUnassigned(val) {\n    return new Simple(val);\n  } // -- Interface for decoder.asm.js\n\n\n  pushInt(val) {\n    this._push(this.createInt(val));\n  }\n\n  pushInt32(f, g) {\n    this._push(this.createInt32(f, g));\n  }\n\n  pushInt64(f1, f2, g1, g2) {\n    this._push(this.createInt64(f1, f2, g1, g2));\n  }\n\n  pushFloat(val) {\n    this._push(this.createFloat(val));\n  }\n\n  pushFloatSingle(a, b, c, d) {\n    this._push(this.createFloatSingle(a, b, c, d));\n  }\n\n  pushFloatDouble(a, b, c, d, e, f, g, h) {\n    this._push(this.createFloatDouble(a, b, c, d, e, f, g, h));\n  }\n\n  pushInt32Neg(f, g) {\n    this._push(this.createInt32Neg(f, g));\n  }\n\n  pushInt64Neg(f1, f2, g1, g2) {\n    this._push(this.createInt64Neg(f1, f2, g1, g2));\n  }\n\n  pushTrue() {\n    this._push(this.createTrue());\n  }\n\n  pushFalse() {\n    this._push(this.createFalse());\n  }\n\n  pushNull() {\n    this._push(this.createNull());\n  }\n\n  pushUndefined() {\n    this._push(this.createUndefined());\n  }\n\n  pushInfinity() {\n    this._push(this.createInfinity());\n  }\n\n  pushInfinityNeg() {\n    this._push(this.createInfinityNeg());\n  }\n\n  pushNaN() {\n    this._push(this.createNaN());\n  }\n\n  pushNaNNeg() {\n    this._push(this.createNaNNeg());\n  }\n\n  pushArrayStart() {\n    this._createParent([], c.PARENT.ARRAY, -1);\n  }\n\n  pushArrayStartFixed(len) {\n    this._createArrayStartFixed(len);\n  }\n\n  pushArrayStartFixed32(len1, len2) {\n    const len = utils.buildInt32(len1, len2);\n\n    this._createArrayStartFixed(len);\n  }\n\n  pushArrayStartFixed64(len1, len2, len3, len4) {\n    const len = utils.buildInt64(len1, len2, len3, len4);\n\n    this._createArrayStartFixed(len);\n  }\n\n  pushObjectStart() {\n    this._createObjectStartFixed(-1);\n  }\n\n  pushObjectStartFixed(len) {\n    this._createObjectStartFixed(len);\n  }\n\n  pushObjectStartFixed32(len1, len2) {\n    const len = utils.buildInt32(len1, len2);\n\n    this._createObjectStartFixed(len);\n  }\n\n  pushObjectStartFixed64(len1, len2, len3, len4) {\n    const len = utils.buildInt64(len1, len2, len3, len4);\n\n    this._createObjectStartFixed(len);\n  }\n\n  pushByteStringStart() {\n    this._parents[this._depth] = {\n      type: c.PARENT.BYTE_STRING,\n      length: -1,\n      ref: [],\n      values: 0,\n      tmpKey: null\n    };\n  }\n\n  pushByteString(start, end) {\n    this._push(this.createByteStringFromHeap(start, end));\n  }\n\n  pushUtf8StringStart() {\n    this._parents[this._depth] = {\n      type: c.PARENT.UTF8_STRING,\n      length: -1,\n      ref: [],\n      values: 0,\n      tmpKey: null\n    };\n  }\n\n  pushUtf8String(start, end) {\n    this._push(this.createUtf8StringFromHeap(start, end));\n  }\n\n  pushSimpleUnassigned(val) {\n    this._push(this.createSimpleUnassigned(val));\n  }\n\n  pushTagStart(tag) {\n    this._parents[this._depth] = {\n      type: c.PARENT.TAG,\n      length: 1,\n      ref: [tag]\n    };\n  }\n\n  pushTagStart4(f, g) {\n    this.pushTagStart(utils.buildInt32(f, g));\n  }\n\n  pushTagStart8(f1, f2, g1, g2) {\n    this.pushTagStart(utils.buildInt64(f1, f2, g1, g2));\n  }\n\n  pushTagUnassigned(tagNumber) {\n    this._push(this.createTag(tagNumber));\n  }\n\n  pushBreak() {\n    if (this._currentParent.length > -1) {\n      throw new Error('Unexpected break');\n    }\n\n    this._closeParent();\n  }\n\n  _createObjectStartFixed(len) {\n    if (len === 0) {\n      this._push(this.createObject({}));\n\n      return;\n    }\n\n    this._createParent({}, c.PARENT.OBJECT, len);\n  }\n\n  _createArrayStartFixed(len) {\n    if (len === 0) {\n      this._push(this.createArray([]));\n\n      return;\n    }\n\n    this._createParent(new Array(len), c.PARENT.ARRAY, len);\n  }\n\n  _decode(input) {\n    if (input.byteLength === 0) {\n      throw new Error('Input too short');\n    }\n\n    this._reset();\n\n    this._heap8.set(input);\n\n    const code = this.parser.parse(input.byteLength);\n\n    if (this._depth > 1) {\n      while (this._currentParent.length === 0) {\n        this._closeParent();\n      }\n\n      if (this._depth > 1) {\n        throw new Error('Undeterminated nesting');\n      }\n    }\n\n    if (code > 0) {\n      throw new Error('Failed to parse');\n    }\n\n    if (this._res.length === 0) {\n      throw new Error('No valid result');\n    }\n  } // -- Public Interface\n\n\n  decodeFirst(input) {\n    this._decode(input);\n\n    return this._res[0];\n  }\n\n  decodeAll(input) {\n    this._decode(input);\n\n    return this._res;\n  }\n  /**\n   * Decode the first cbor object.\n   *\n   * @param {Buffer|string} input\n   * @param {string} [enc='hex'] - Encoding used if a string is passed.\n   * @returns {*}\n   */\n\n\n  static decode(input, enc) {\n    if (typeof input === 'string') {\n      input = Buffer.from(input, enc || 'hex');\n    }\n\n    const dec = new Decoder({\n      size: input.length\n    });\n    return dec.decodeFirst(input);\n  }\n  /**\n   * Decode all cbor objects.\n   *\n   * @param {Buffer|string} input\n   * @param {string} [enc='hex'] - Encoding used if a string is passed.\n   * @returns {Array<*>}\n   */\n\n\n  static decodeAll(input, enc) {\n    if (typeof input === 'string') {\n      input = Buffer.from(input, enc || 'hex');\n    }\n\n    const dec = new Decoder({\n      size: input.length\n    });\n    return dec.decodeAll(input);\n  }\n\n}\n\nDecoder.decodeFirst = Decoder.decode;\nmodule.exports = Decoder;","map":{"version":3,"sources":["z:/Projects/EtherealOrgan/Complete Project/client/node_modules/borc/src/decoder.js"],"names":["Buffer","require","ieee754","Bignumber","BigNumber","parser","utils","c","Simple","Tagged","URL","Decoder","constructor","opts","size","nextPowerOf2","_heap","ArrayBuffer","_heap8","Uint8Array","_buffer","from","_reset","_knownTags","Object","assign","val","Date","arrayBufferToBignumber","NEG_ONE","minus","v","TEN","pow","times","TWO","RegExp","tags","global","log","console","bind","pushInt","pushInt32","pushInt32Neg","pushInt64","pushInt64Neg","pushFloat","pushFloatSingle","pushFloatDouble","pushTrue","pushFalse","pushUndefined","pushNull","pushInfinity","pushInfinityNeg","pushNaN","pushNaNNeg","pushArrayStart","pushArrayStartFixed","pushArrayStartFixed32","pushArrayStartFixed64","pushObjectStart","pushObjectStartFixed","pushObjectStartFixed32","pushObjectStartFixed64","pushByteString","pushByteStringStart","pushUtf8String","pushUtf8StringStart","pushSimpleUnassigned","pushTagUnassigned","pushTagStart","pushTagStart4","pushTagStart8","pushBreak","_depth","_parents","length","_currentParent","_ref","ref","_closeParent","p","pop","Error","type","PARENT","TAG","_push","createTag","BYTE_STRING","createByteString","UTF8_STRING","createUtf8String","MAP","values","createMap","OBJECT","createObject","ARRAY","createArray","_dec","hasChildren","push","tmpKey","buildMap","set","_createParent","obj","len","_res","tagNumber","value","typ","arr","raw","concat","createByteStringFromHeap","start","end","alloc","slice","createInt","createInt32","f","g","buildInt32","createInt64","f1","f2","g1","g2","buildInt64","createFloat","createFloatSingle","a","b","d","read","createFloatDouble","e","h","createInt32Neg","createInt64Neg","MAX_SAFE_HIGH","SHIFT32","plus","createTrue","createFalse","createNull","createUndefined","undefined","createInfinity","Infinity","createInfinityNeg","createNaN","NaN","createNaNNeg","join","createUtf8StringFromHeap","toString","createSimpleUnassigned","_createArrayStartFixed","len1","len2","len3","len4","_createObjectStartFixed","tag","Array","_decode","input","byteLength","code","parse","decodeFirst","decodeAll","decode","enc","dec","module","exports"],"mappings":"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","sourcesContent":["'use strict'\n\nconst { Buffer } = require('buffer')\nconst ieee754 = require('ieee754')\nconst Bignumber = require('bignumber.js').BigNumber\n\nconst parser = require('./decoder.asm')\nconst utils = require('./utils')\nconst c = require('./constants')\nconst Simple = require('./simple')\nconst Tagged = require('./tagged')\nconst { URL } = require('iso-url')\n\n/**\n * Transform binary cbor data into JavaScript objects.\n */\nclass Decoder {\n  /**\n   * @param {Object} [opts={}]\n   * @param {number} [opts.size=65536] - Size of the allocated heap.\n   */\n  constructor (opts) {\n    opts = opts || {}\n\n    if (!opts.size || opts.size < 0x10000) {\n      opts.size = 0x10000\n    } else {\n      // Ensure the size is a power of 2\n      opts.size = utils.nextPowerOf2(opts.size)\n    }\n\n    // Heap use to share the input with the parser\n    this._heap = new ArrayBuffer(opts.size)\n    this._heap8 = new Uint8Array(this._heap)\n    this._buffer = Buffer.from(this._heap)\n\n    this._reset()\n\n    // Known tags\n    this._knownTags = Object.assign({\n      0: (val) => new Date(val),\n      1: (val) => new Date(val * 1000),\n      2: (val) => utils.arrayBufferToBignumber(val),\n      3: (val) => c.NEG_ONE.minus(utils.arrayBufferToBignumber(val)),\n      4: (v) => {\n        // const v = new Uint8Array(val)\n        return c.TEN.pow(v[0]).times(v[1])\n      },\n      5: (v) => {\n        // const v = new Uint8Array(val)\n        return c.TWO.pow(v[0]).times(v[1])\n      },\n      32: (val) => new URL(val),\n      35: (val) => new RegExp(val)\n    }, opts.tags)\n\n    // Initialize asm based parser\n    this.parser = parser(global, {\n      // eslint-disable-next-line no-console\n      log: console.log.bind(console),\n      pushInt: this.pushInt.bind(this),\n      pushInt32: this.pushInt32.bind(this),\n      pushInt32Neg: this.pushInt32Neg.bind(this),\n      pushInt64: this.pushInt64.bind(this),\n      pushInt64Neg: this.pushInt64Neg.bind(this),\n      pushFloat: this.pushFloat.bind(this),\n      pushFloatSingle: this.pushFloatSingle.bind(this),\n      pushFloatDouble: this.pushFloatDouble.bind(this),\n      pushTrue: this.pushTrue.bind(this),\n      pushFalse: this.pushFalse.bind(this),\n      pushUndefined: this.pushUndefined.bind(this),\n      pushNull: this.pushNull.bind(this),\n      pushInfinity: this.pushInfinity.bind(this),\n      pushInfinityNeg: this.pushInfinityNeg.bind(this),\n      pushNaN: this.pushNaN.bind(this),\n      pushNaNNeg: this.pushNaNNeg.bind(this),\n      pushArrayStart: this.pushArrayStart.bind(this),\n      pushArrayStartFixed: this.pushArrayStartFixed.bind(this),\n      pushArrayStartFixed32: this.pushArrayStartFixed32.bind(this),\n      pushArrayStartFixed64: this.pushArrayStartFixed64.bind(this),\n      pushObjectStart: this.pushObjectStart.bind(this),\n      pushObjectStartFixed: this.pushObjectStartFixed.bind(this),\n      pushObjectStartFixed32: this.pushObjectStartFixed32.bind(this),\n      pushObjectStartFixed64: this.pushObjectStartFixed64.bind(this),\n      pushByteString: this.pushByteString.bind(this),\n      pushByteStringStart: this.pushByteStringStart.bind(this),\n      pushUtf8String: this.pushUtf8String.bind(this),\n      pushUtf8StringStart: this.pushUtf8StringStart.bind(this),\n      pushSimpleUnassigned: this.pushSimpleUnassigned.bind(this),\n      pushTagUnassigned: this.pushTagUnassigned.bind(this),\n      pushTagStart: this.pushTagStart.bind(this),\n      pushTagStart4: this.pushTagStart4.bind(this),\n      pushTagStart8: this.pushTagStart8.bind(this),\n      pushBreak: this.pushBreak.bind(this)\n    }, this._heap)\n  }\n\n  get _depth () {\n    return this._parents.length\n  }\n\n  get _currentParent () {\n    return this._parents[this._depth - 1]\n  }\n\n  get _ref () {\n    return this._currentParent.ref\n  }\n\n  // Finish the current parent\n  _closeParent () {\n    var p = this._parents.pop()\n\n    if (p.length > 0) {\n      throw new Error(`Missing ${p.length} elements`)\n    }\n\n    switch (p.type) {\n      case c.PARENT.TAG:\n        this._push(\n          this.createTag(p.ref[0], p.ref[1])\n        )\n        break\n      case c.PARENT.BYTE_STRING:\n        this._push(this.createByteString(p.ref, p.length))\n        break\n      case c.PARENT.UTF8_STRING:\n        this._push(this.createUtf8String(p.ref, p.length))\n        break\n      case c.PARENT.MAP:\n        if (p.values % 2 > 0) {\n          throw new Error('Odd number of elements in the map')\n        }\n        this._push(this.createMap(p.ref, p.length))\n        break\n      case c.PARENT.OBJECT:\n        if (p.values % 2 > 0) {\n          throw new Error('Odd number of elements in the map')\n        }\n        this._push(this.createObject(p.ref, p.length))\n        break\n      case c.PARENT.ARRAY:\n        this._push(this.createArray(p.ref, p.length))\n        break\n      default:\n        break\n    }\n\n    if (this._currentParent && this._currentParent.type === c.PARENT.TAG) {\n      this._dec()\n    }\n  }\n\n  // Reduce the expected length of the current parent by one\n  _dec () {\n    const p = this._currentParent\n    // The current parent does not know the epxected child length\n\n    if (p.length < 0) {\n      return\n    }\n\n    p.length--\n\n    // All children were seen, we can close the current parent\n    if (p.length === 0) {\n      this._closeParent()\n    }\n  }\n\n  // Push any value to the current parent\n  _push (val, hasChildren) {\n    const p = this._currentParent\n    p.values++\n\n    switch (p.type) {\n      case c.PARENT.ARRAY:\n      case c.PARENT.BYTE_STRING:\n      case c.PARENT.UTF8_STRING:\n        if (p.length > -1) {\n          this._ref[this._ref.length - p.length] = val\n        } else {\n          this._ref.push(val)\n        }\n        this._dec()\n        break\n      case c.PARENT.OBJECT:\n        if (p.tmpKey != null) {\n          this._ref[p.tmpKey] = val\n          p.tmpKey = null\n          this._dec()\n        } else {\n          p.tmpKey = val\n\n          if (typeof p.tmpKey !== 'string') {\n            // too bad, convert to a Map\n            p.type = c.PARENT.MAP\n            p.ref = utils.buildMap(p.ref)\n          }\n        }\n        break\n      case c.PARENT.MAP:\n        if (p.tmpKey != null) {\n          this._ref.set(p.tmpKey, val)\n          p.tmpKey = null\n          this._dec()\n        } else {\n          p.tmpKey = val\n        }\n        break\n      case c.PARENT.TAG:\n        this._ref.push(val)\n        if (!hasChildren) {\n          this._dec()\n        }\n        break\n      default:\n        throw new Error('Unknown parent type')\n    }\n  }\n\n  // Create a new parent in the parents list\n  _createParent (obj, type, len) {\n    this._parents[this._depth] = {\n      type: type,\n      length: len,\n      ref: obj,\n      values: 0,\n      tmpKey: null\n    }\n  }\n\n  // Reset all state back to the beginning, also used for initiatlization\n  _reset () {\n    this._res = []\n    this._parents = [{\n      type: c.PARENT.ARRAY,\n      length: -1,\n      ref: this._res,\n      values: 0,\n      tmpKey: null\n    }]\n  }\n\n  // -- Interface to customize deoding behaviour\n  createTag (tagNumber, value) {\n    const typ = this._knownTags[tagNumber]\n\n    if (!typ) {\n      return new Tagged(tagNumber, value)\n    }\n\n    return typ(value)\n  }\n\n  createMap (obj, len) {\n    return obj\n  }\n\n  createObject (obj, len) {\n    return obj\n  }\n\n  createArray (arr, len) {\n    return arr\n  }\n\n  createByteString (raw, len) {\n    return Buffer.concat(raw)\n  }\n\n  createByteStringFromHeap (start, end) {\n    if (start === end) {\n      return Buffer.alloc(0)\n    }\n\n    return Buffer.from(this._heap.slice(start, end))\n  }\n\n  createInt (val) {\n    return val\n  }\n\n  createInt32 (f, g) {\n    return utils.buildInt32(f, g)\n  }\n\n  createInt64 (f1, f2, g1, g2) {\n    return utils.buildInt64(f1, f2, g1, g2)\n  }\n\n  createFloat (val) {\n    return val\n  }\n\n  createFloatSingle (a, b, c, d) {\n    return ieee754.read([a, b, c, d], 0, false, 23, 4)\n  }\n\n  createFloatDouble (a, b, c, d, e, f, g, h) {\n    return ieee754.read([a, b, c, d, e, f, g, h], 0, false, 52, 8)\n  }\n\n  createInt32Neg (f, g) {\n    return -1 - utils.buildInt32(f, g)\n  }\n\n  createInt64Neg (f1, f2, g1, g2) {\n    const f = utils.buildInt32(f1, f2)\n    const g = utils.buildInt32(g1, g2)\n\n    if (f > c.MAX_SAFE_HIGH) {\n      return c.NEG_ONE.minus(new Bignumber(f).times(c.SHIFT32).plus(g))\n    }\n\n    return -1 - ((f * c.SHIFT32) + g)\n  }\n\n  createTrue () {\n    return true\n  }\n\n  createFalse () {\n    return false\n  }\n\n  createNull () {\n    return null\n  }\n\n  createUndefined () {\n    return undefined\n  }\n\n  createInfinity () {\n    return Infinity\n  }\n\n  createInfinityNeg () {\n    return -Infinity\n  }\n\n  createNaN () {\n    return NaN\n  }\n\n  createNaNNeg () {\n    return -NaN\n  }\n\n  createUtf8String (raw, len) {\n    return raw.join('')\n  }\n\n  createUtf8StringFromHeap (start, end) {\n    if (start === end) {\n      return ''\n    }\n\n    return this._buffer.toString('utf8', start, end)\n  }\n\n  createSimpleUnassigned (val) {\n    return new Simple(val)\n  }\n\n  // -- Interface for decoder.asm.js\n\n  pushInt (val) {\n    this._push(this.createInt(val))\n  }\n\n  pushInt32 (f, g) {\n    this._push(this.createInt32(f, g))\n  }\n\n  pushInt64 (f1, f2, g1, g2) {\n    this._push(this.createInt64(f1, f2, g1, g2))\n  }\n\n  pushFloat (val) {\n    this._push(this.createFloat(val))\n  }\n\n  pushFloatSingle (a, b, c, d) {\n    this._push(this.createFloatSingle(a, b, c, d))\n  }\n\n  pushFloatDouble (a, b, c, d, e, f, g, h) {\n    this._push(this.createFloatDouble(a, b, c, d, e, f, g, h))\n  }\n\n  pushInt32Neg (f, g) {\n    this._push(this.createInt32Neg(f, g))\n  }\n\n  pushInt64Neg (f1, f2, g1, g2) {\n    this._push(this.createInt64Neg(f1, f2, g1, g2))\n  }\n\n  pushTrue () {\n    this._push(this.createTrue())\n  }\n\n  pushFalse () {\n    this._push(this.createFalse())\n  }\n\n  pushNull () {\n    this._push(this.createNull())\n  }\n\n  pushUndefined () {\n    this._push(this.createUndefined())\n  }\n\n  pushInfinity () {\n    this._push(this.createInfinity())\n  }\n\n  pushInfinityNeg () {\n    this._push(this.createInfinityNeg())\n  }\n\n  pushNaN () {\n    this._push(this.createNaN())\n  }\n\n  pushNaNNeg () {\n    this._push(this.createNaNNeg())\n  }\n\n  pushArrayStart () {\n    this._createParent([], c.PARENT.ARRAY, -1)\n  }\n\n  pushArrayStartFixed (len) {\n    this._createArrayStartFixed(len)\n  }\n\n  pushArrayStartFixed32 (len1, len2) {\n    const len = utils.buildInt32(len1, len2)\n    this._createArrayStartFixed(len)\n  }\n\n  pushArrayStartFixed64 (len1, len2, len3, len4) {\n    const len = utils.buildInt64(len1, len2, len3, len4)\n    this._createArrayStartFixed(len)\n  }\n\n  pushObjectStart () {\n    this._createObjectStartFixed(-1)\n  }\n\n  pushObjectStartFixed (len) {\n    this._createObjectStartFixed(len)\n  }\n\n  pushObjectStartFixed32 (len1, len2) {\n    const len = utils.buildInt32(len1, len2)\n    this._createObjectStartFixed(len)\n  }\n\n  pushObjectStartFixed64 (len1, len2, len3, len4) {\n    const len = utils.buildInt64(len1, len2, len3, len4)\n    this._createObjectStartFixed(len)\n  }\n\n  pushByteStringStart () {\n    this._parents[this._depth] = {\n      type: c.PARENT.BYTE_STRING,\n      length: -1,\n      ref: [],\n      values: 0,\n      tmpKey: null\n    }\n  }\n\n  pushByteString (start, end) {\n    this._push(this.createByteStringFromHeap(start, end))\n  }\n\n  pushUtf8StringStart () {\n    this._parents[this._depth] = {\n      type: c.PARENT.UTF8_STRING,\n      length: -1,\n      ref: [],\n      values: 0,\n      tmpKey: null\n    }\n  }\n\n  pushUtf8String (start, end) {\n    this._push(this.createUtf8StringFromHeap(start, end))\n  }\n\n  pushSimpleUnassigned (val) {\n    this._push(this.createSimpleUnassigned(val))\n  }\n\n  pushTagStart (tag) {\n    this._parents[this._depth] = {\n      type: c.PARENT.TAG,\n      length: 1,\n      ref: [tag]\n    }\n  }\n\n  pushTagStart4 (f, g) {\n    this.pushTagStart(utils.buildInt32(f, g))\n  }\n\n  pushTagStart8 (f1, f2, g1, g2) {\n    this.pushTagStart(utils.buildInt64(f1, f2, g1, g2))\n  }\n\n  pushTagUnassigned (tagNumber) {\n    this._push(this.createTag(tagNumber))\n  }\n\n  pushBreak () {\n    if (this._currentParent.length > -1) {\n      throw new Error('Unexpected break')\n    }\n\n    this._closeParent()\n  }\n\n  _createObjectStartFixed (len) {\n    if (len === 0) {\n      this._push(this.createObject({}))\n      return\n    }\n\n    this._createParent({}, c.PARENT.OBJECT, len)\n  }\n\n  _createArrayStartFixed (len) {\n    if (len === 0) {\n      this._push(this.createArray([]))\n      return\n    }\n\n    this._createParent(new Array(len), c.PARENT.ARRAY, len)\n  }\n\n  _decode (input) {\n    if (input.byteLength === 0) {\n      throw new Error('Input too short')\n    }\n\n    this._reset()\n    this._heap8.set(input)\n    const code = this.parser.parse(input.byteLength)\n\n    if (this._depth > 1) {\n      while (this._currentParent.length === 0) {\n        this._closeParent()\n      }\n      if (this._depth > 1) {\n        throw new Error('Undeterminated nesting')\n      }\n    }\n\n    if (code > 0) {\n      throw new Error('Failed to parse')\n    }\n\n    if (this._res.length === 0) {\n      throw new Error('No valid result')\n    }\n  }\n\n  // -- Public Interface\n\n  decodeFirst (input) {\n    this._decode(input)\n\n    return this._res[0]\n  }\n\n  decodeAll (input) {\n    this._decode(input)\n\n    return this._res\n  }\n\n  /**\n   * Decode the first cbor object.\n   *\n   * @param {Buffer|string} input\n   * @param {string} [enc='hex'] - Encoding used if a string is passed.\n   * @returns {*}\n   */\n  static decode (input, enc) {\n    if (typeof input === 'string') {\n      input = Buffer.from(input, enc || 'hex')\n    }\n\n    const dec = new Decoder({ size: input.length })\n    return dec.decodeFirst(input)\n  }\n\n  /**\n   * Decode all cbor objects.\n   *\n   * @param {Buffer|string} input\n   * @param {string} [enc='hex'] - Encoding used if a string is passed.\n   * @returns {Array<*>}\n   */\n  static decodeAll (input, enc) {\n    if (typeof input === 'string') {\n      input = Buffer.from(input, enc || 'hex')\n    }\n\n    const dec = new Decoder({ size: input.length })\n    return dec.decodeAll(input)\n  }\n}\n\nDecoder.decodeFirst = Decoder.decode\n\nmodule.exports = Decoder\n"]},"metadata":{},"sourceType":"script"}