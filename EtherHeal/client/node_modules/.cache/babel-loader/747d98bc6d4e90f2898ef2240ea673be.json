{"ast":null,"code":"'use strict';\n\nconst promisify = require('promisify-es6');\n\nconst mapKeys = require('lodash/mapKeys');\n\nconst kebabCase = require('lodash/kebabCase');\n\nconst transform = function (data, callback) {\n  callback(null, {\n    type: data.Type,\n    blocks: data.Blocks,\n    size: data.Size,\n    hash: data.Hash,\n    cumulativeSize: data.CumulativeSize,\n    withLocality: data.WithLocality || false,\n    local: data.Local || undefined,\n    sizeLocal: data.SizeLocal || undefined\n  });\n};\n\nmodule.exports = send => {\n  return promisify((args, opts, callback) => {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = mapKeys(opts, (v, k) => kebabCase(k));\n    send.andTransform({\n      path: 'files/stat',\n      args: args,\n      qs: opts\n    }, transform, callback);\n  });\n};","map":{"version":3,"sources":["Z:/Projects/Rakuten Hack/EtherealHeal/Complete Project/client/node_modules/ipfs-api/src/files/stat.js"],"names":["promisify","require","mapKeys","kebabCase","transform","data","callback","type","Type","blocks","Blocks","size","Size","hash","Hash","cumulativeSize","CumulativeSize","withLocality","WithLocality","local","Local","undefined","sizeLocal","SizeLocal","module","exports","send","args","opts","v","k","andTransform","path","qs"],"mappings":"AAAA;;AAEA,MAAMA,SAAS,GAAGC,OAAO,CAAC,eAAD,CAAzB;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,gBAAD,CAAvB;;AACA,MAAME,SAAS,GAAGF,OAAO,CAAC,kBAAD,CAAzB;;AAEA,MAAMG,SAAS,GAAG,UAAUC,IAAV,EAAgBC,QAAhB,EAA0B;AAC1CA,EAAAA,QAAQ,CAAC,IAAD,EAAO;AACbC,IAAAA,IAAI,EAAEF,IAAI,CAACG,IADE;AAEbC,IAAAA,MAAM,EAAEJ,IAAI,CAACK,MAFA;AAGbC,IAAAA,IAAI,EAAEN,IAAI,CAACO,IAHE;AAIbC,IAAAA,IAAI,EAAER,IAAI,CAACS,IAJE;AAKbC,IAAAA,cAAc,EAAEV,IAAI,CAACW,cALR;AAMbC,IAAAA,YAAY,EAAEZ,IAAI,CAACa,YAAL,IAAqB,KANtB;AAObC,IAAAA,KAAK,EAAEd,IAAI,CAACe,KAAL,IAAcC,SAPR;AAQbC,IAAAA,SAAS,EAAEjB,IAAI,CAACkB,SAAL,IAAkBF;AARhB,GAAP,CAAR;AAUD,CAXD;;AAaAG,MAAM,CAACC,OAAP,GAAkBC,IAAD,IAAU;AACzB,SAAO1B,SAAS,CAAC,CAAC2B,IAAD,EAAOC,IAAP,EAAatB,QAAb,KAA0B;AACzC,QAAI,OAAQsB,IAAR,KAAkB,UAAtB,EAAkC;AAChCtB,MAAAA,QAAQ,GAAGsB,IAAX;AACAA,MAAAA,IAAI,GAAG,EAAP;AACD;;AAEDA,IAAAA,IAAI,GAAG1B,OAAO,CAAC0B,IAAD,EAAO,CAACC,CAAD,EAAIC,CAAJ,KAAU3B,SAAS,CAAC2B,CAAD,CAA1B,CAAd;AAEAJ,IAAAA,IAAI,CAACK,YAAL,CAAkB;AAChBC,MAAAA,IAAI,EAAE,YADU;AAEhBL,MAAAA,IAAI,EAAEA,IAFU;AAGhBM,MAAAA,EAAE,EAAEL;AAHY,KAAlB,EAIGxB,SAJH,EAIcE,QAJd;AAKD,GAbe,CAAhB;AAcD,CAfD","sourcesContent":["'use strict'\n\nconst promisify = require('promisify-es6')\nconst mapKeys = require('lodash/mapKeys')\nconst kebabCase = require('lodash/kebabCase')\n\nconst transform = function (data, callback) {\n  callback(null, {\n    type: data.Type,\n    blocks: data.Blocks,\n    size: data.Size,\n    hash: data.Hash,\n    cumulativeSize: data.CumulativeSize,\n    withLocality: data.WithLocality || false,\n    local: data.Local || undefined,\n    sizeLocal: data.SizeLocal || undefined\n  })\n}\n\nmodule.exports = (send) => {\n  return promisify((args, opts, callback) => {\n    if (typeof (opts) === 'function') {\n      callback = opts\n      opts = {}\n    }\n\n    opts = mapKeys(opts, (v, k) => kebabCase(k))\n\n    send.andTransform({\n      path: 'files/stat',\n      args: args,\n      qs: opts\n    }, transform, callback)\n  })\n}\n"]},"metadata":{},"sourceType":"script"}