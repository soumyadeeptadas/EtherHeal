{"ast":null,"code":"'use strict';\n\nconst promisify = require('promisify-es6');\n\nconst Big = require('big.js');\n\nconst transform = function (res, callback) {\n  callback(null, {\n    provideBufLen: res.ProvideBufLen,\n    wantlist: res.Wantlist || [],\n    peers: res.Peers || [],\n    blocksReceived: new Big(res.BlocksReceived),\n    dataReceived: new Big(res.DataReceived),\n    blocksSent: new Big(res.BlocksSent),\n    dataSent: new Big(res.DataSent),\n    dupBlksReceived: new Big(res.DupBlksReceived),\n    dupDataReceived: new Big(res.DupDataReceived)\n  });\n};\n\nmodule.exports = send => {\n  return promisify(callback => {\n    send.andTransform({\n      path: 'bitswap/stat'\n    }, transform, callback);\n  });\n};","map":{"version":3,"sources":["z:/Projects/EtherealOrgan/Complete Project/client/node_modules/ipfs-api/src/bitswap/stat.js"],"names":["promisify","require","Big","transform","res","callback","provideBufLen","ProvideBufLen","wantlist","Wantlist","peers","Peers","blocksReceived","BlocksReceived","dataReceived","DataReceived","blocksSent","BlocksSent","dataSent","DataSent","dupBlksReceived","DupBlksReceived","dupDataReceived","DupDataReceived","module","exports","send","andTransform","path"],"mappings":"AAAA;;AAEA,MAAMA,SAAS,GAAGC,OAAO,CAAC,eAAD,CAAzB;;AACA,MAAMC,GAAG,GAAGD,OAAO,CAAC,QAAD,CAAnB;;AAEA,MAAME,SAAS,GAAG,UAAUC,GAAV,EAAeC,QAAf,EAAyB;AACzCA,EAAAA,QAAQ,CAAC,IAAD,EAAO;AACbC,IAAAA,aAAa,EAAEF,GAAG,CAACG,aADN;AAEbC,IAAAA,QAAQ,EAAEJ,GAAG,CAACK,QAAJ,IAAgB,EAFb;AAGbC,IAAAA,KAAK,EAAEN,GAAG,CAACO,KAAJ,IAAa,EAHP;AAIbC,IAAAA,cAAc,EAAE,IAAIV,GAAJ,CAAQE,GAAG,CAACS,cAAZ,CAJH;AAKbC,IAAAA,YAAY,EAAE,IAAIZ,GAAJ,CAAQE,GAAG,CAACW,YAAZ,CALD;AAMbC,IAAAA,UAAU,EAAE,IAAId,GAAJ,CAAQE,GAAG,CAACa,UAAZ,CANC;AAObC,IAAAA,QAAQ,EAAE,IAAIhB,GAAJ,CAAQE,GAAG,CAACe,QAAZ,CAPG;AAQbC,IAAAA,eAAe,EAAE,IAAIlB,GAAJ,CAAQE,GAAG,CAACiB,eAAZ,CARJ;AASbC,IAAAA,eAAe,EAAE,IAAIpB,GAAJ,CAAQE,GAAG,CAACmB,eAAZ;AATJ,GAAP,CAAR;AAWD,CAZD;;AAcAC,MAAM,CAACC,OAAP,GAAkBC,IAAD,IAAU;AACzB,SAAO1B,SAAS,CAAEK,QAAD,IAAc;AAC7BqB,IAAAA,IAAI,CAACC,YAAL,CAAkB;AAChBC,MAAAA,IAAI,EAAE;AADU,KAAlB,EAEGzB,SAFH,EAEcE,QAFd;AAGD,GAJe,CAAhB;AAKD,CAND","sourcesContent":["'use strict'\n\nconst promisify = require('promisify-es6')\nconst Big = require('big.js')\n\nconst transform = function (res, callback) {\n  callback(null, {\n    provideBufLen: res.ProvideBufLen,\n    wantlist: res.Wantlist || [],\n    peers: res.Peers || [],\n    blocksReceived: new Big(res.BlocksReceived),\n    dataReceived: new Big(res.DataReceived),\n    blocksSent: new Big(res.BlocksSent),\n    dataSent: new Big(res.DataSent),\n    dupBlksReceived: new Big(res.DupBlksReceived),\n    dupDataReceived: new Big(res.DupDataReceived)\n  })\n}\n\nmodule.exports = (send) => {\n  return promisify((callback) => {\n    send.andTransform({\n      path: 'bitswap/stat'\n    }, transform, callback)\n  })\n}\n"]},"metadata":{},"sourceType":"script"}