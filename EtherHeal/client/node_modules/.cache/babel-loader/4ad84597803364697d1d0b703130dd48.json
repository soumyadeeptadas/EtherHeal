{"ast":null,"code":"var BN = require(\"bn.js\");\n\nvar Bytes = require(\"./bytes\");\n\nvar fromBN = function fromBN(bn) {\n  return \"0x\" + bn.toString(\"hex\");\n};\n\nvar toBN = function toBN(str) {\n  return new BN(str.slice(2), 16);\n};\n\nvar fromString = function fromString(str) {\n  var bn = \"0x\" + (str.slice(0, 2) === \"0x\" ? new BN(str.slice(2), 16) : new BN(str, 10)).toString(\"hex\");\n  return bn === \"0x0\" ? \"0x\" : bn;\n};\n\nvar toEther = function toEther(wei) {\n  return toNumber(div(wei, fromString(\"10000000000\"))) / 100000000;\n};\n\nvar fromEther = function fromEther(eth) {\n  return mul(fromNumber(Math.floor(eth * 100000000)), fromString(\"10000000000\"));\n};\n\nvar toString = function toString(a) {\n  return toBN(a).toString(10);\n};\n\nvar fromNumber = function fromNumber(a) {\n  return typeof a === \"string\" ? /^0x/.test(a) ? a : \"0x\" + a : \"0x\" + new BN(a).toString(\"hex\");\n};\n\nvar toNumber = function toNumber(a) {\n  return toBN(a).toNumber();\n};\n\nvar toUint256 = function toUint256(a) {\n  return Bytes.pad(32, a);\n};\n\nvar bin = function bin(method) {\n  return function (a, b) {\n    return fromBN(toBN(a)[method](toBN(b)));\n  };\n};\n\nvar add = bin(\"add\");\nvar mul = bin(\"mul\");\nvar div = bin(\"div\");\nvar sub = bin(\"sub\");\nmodule.exports = {\n  toString: toString,\n  fromString: fromString,\n  toNumber: toNumber,\n  fromNumber: fromNumber,\n  toEther: toEther,\n  fromEther: fromEther,\n  toUint256: toUint256,\n  add: add,\n  mul: mul,\n  div: div,\n  sub: sub\n};","map":{"version":3,"sources":["z:/Projects/EtherealOrgan-copy/Complete Project/client/node_modules/eth-lib/lib/nat.js"],"names":["BN","require","Bytes","fromBN","bn","toString","toBN","str","slice","fromString","toEther","wei","toNumber","div","fromEther","eth","mul","fromNumber","Math","floor","a","test","toUint256","pad","bin","method","b","add","sub","module","exports"],"mappings":"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","sourcesContent":["var BN = require(\"bn.js\");\nvar Bytes = require(\"./bytes\");\n\nvar fromBN = function fromBN(bn) {\n  return \"0x\" + bn.toString(\"hex\");\n};\n\nvar toBN = function toBN(str) {\n  return new BN(str.slice(2), 16);\n};\n\nvar fromString = function fromString(str) {\n  var bn = \"0x\" + (str.slice(0, 2) === \"0x\" ? new BN(str.slice(2), 16) : new BN(str, 10)).toString(\"hex\");\n  return bn === \"0x0\" ? \"0x\" : bn;\n};\n\nvar toEther = function toEther(wei) {\n  return toNumber(div(wei, fromString(\"10000000000\"))) / 100000000;\n};\n\nvar fromEther = function fromEther(eth) {\n  return mul(fromNumber(Math.floor(eth * 100000000)), fromString(\"10000000000\"));\n};\n\nvar toString = function toString(a) {\n  return toBN(a).toString(10);\n};\n\nvar fromNumber = function fromNumber(a) {\n  return typeof a === \"string\" ? /^0x/.test(a) ? a : \"0x\" + a : \"0x\" + new BN(a).toString(\"hex\");\n};\n\nvar toNumber = function toNumber(a) {\n  return toBN(a).toNumber();\n};\n\nvar toUint256 = function toUint256(a) {\n  return Bytes.pad(32, a);\n};\n\nvar bin = function bin(method) {\n  return function (a, b) {\n    return fromBN(toBN(a)[method](toBN(b)));\n  };\n};\n\nvar add = bin(\"add\");\nvar mul = bin(\"mul\");\nvar div = bin(\"div\");\nvar sub = bin(\"sub\");\n\nmodule.exports = {\n  toString: toString,\n  fromString: fromString,\n  toNumber: toNumber,\n  fromNumber: fromNumber,\n  toEther: toEther,\n  fromEther: fromEther,\n  toUint256: toUint256,\n  add: add,\n  mul: mul,\n  div: div,\n  sub: sub\n};"]},"metadata":{},"sourceType":"script"}