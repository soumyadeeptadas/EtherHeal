{"ast":null,"code":"'use strict';\n\nconst promisify = require('promisify-es6');\n\nconst CID = require('cids');\n\nmodule.exports = send => {\n  return promisify((peerId, opts, callback) => {\n    if (typeof peerId === 'function') {\n      callback = peerId;\n      opts = {};\n      peerId = null;\n    } else if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n\n    if (peerId) {\n      try {\n        opts.peer = new CID(peerId).toBaseEncodedString();\n      } catch (err) {\n        return callback(err);\n      }\n    }\n\n    send({\n      path: 'bitswap/wantlist',\n      qs: opts\n    }, callback);\n  });\n};","map":{"version":3,"sources":["z:/Projects/EtherealOrgan-Halo/Complete Project/client/node_modules/ipfs-api/src/bitswap/wantlist.js"],"names":["promisify","require","CID","module","exports","send","peerId","opts","callback","peer","toBaseEncodedString","err","path","qs"],"mappings":"AAAA;;AAEA,MAAMA,SAAS,GAAGC,OAAO,CAAC,eAAD,CAAzB;;AACA,MAAMC,GAAG,GAAGD,OAAO,CAAC,MAAD,CAAnB;;AAEAE,MAAM,CAACC,OAAP,GAAkBC,IAAD,IAAU;AACzB,SAAOL,SAAS,CAAC,CAACM,MAAD,EAASC,IAAT,EAAeC,QAAf,KAA4B;AAC3C,QAAI,OAAQF,MAAR,KAAoB,UAAxB,EAAoC;AAClCE,MAAAA,QAAQ,GAAGF,MAAX;AACAC,MAAAA,IAAI,GAAG,EAAP;AACAD,MAAAA,MAAM,GAAG,IAAT;AACD,KAJD,MAIO,IAAI,OAAQC,IAAR,KAAkB,UAAtB,EAAkC;AACvCC,MAAAA,QAAQ,GAAGD,IAAX;AACAA,MAAAA,IAAI,GAAG,EAAP;AACD;;AAED,QAAID,MAAJ,EAAY;AACV,UAAI;AACFC,QAAAA,IAAI,CAACE,IAAL,GAAY,IAAIP,GAAJ,CAAQI,MAAR,EAAgBI,mBAAhB,EAAZ;AACD,OAFD,CAEE,OAAOC,GAAP,EAAY;AACZ,eAAOH,QAAQ,CAACG,GAAD,CAAf;AACD;AACF;;AAEDN,IAAAA,IAAI,CAAC;AACHO,MAAAA,IAAI,EAAE,kBADH;AAEHC,MAAAA,EAAE,EAAEN;AAFD,KAAD,EAGDC,QAHC,CAAJ;AAID,GAtBe,CAAhB;AAuBD,CAxBD","sourcesContent":["'use strict'\n\nconst promisify = require('promisify-es6')\nconst CID = require('cids')\n\nmodule.exports = (send) => {\n  return promisify((peerId, opts, callback) => {\n    if (typeof (peerId) === 'function') {\n      callback = peerId\n      opts = {}\n      peerId = null\n    } else if (typeof (opts) === 'function') {\n      callback = opts\n      opts = {}\n    }\n\n    if (peerId) {\n      try {\n        opts.peer = new CID(peerId).toBaseEncodedString()\n      } catch (err) {\n        return callback(err)\n      }\n    }\n\n    send({\n      path: 'bitswap/wantlist',\n      qs: opts\n    }, callback)\n  })\n}\n"]},"metadata":{},"sourceType":"script"}