{"ast":null,"code":"function allocUnsafe(size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number');\n  }\n\n  if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative');\n  }\n\n  if (Buffer.allocUnsafe) {\n    return Buffer.allocUnsafe(size);\n  } else {\n    return new Buffer(size);\n  }\n}\n\nmodule.exports = allocUnsafe;","map":{"version":3,"sources":["z:/Projects/EtherealOrgan/Complete Project/client/node_modules/buffer-alloc-unsafe/index.js"],"names":["allocUnsafe","size","TypeError","RangeError","Buffer","module","exports"],"mappings":"AAAA,SAASA,WAAT,CAAsBC,IAAtB,EAA4B;AAC1B,MAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AAC5B,UAAM,IAAIC,SAAJ,CAAc,kCAAd,CAAN;AACD;;AAED,MAAID,IAAI,GAAG,CAAX,EAAc;AACZ,UAAM,IAAIE,UAAJ,CAAe,sCAAf,CAAN;AACD;;AAED,MAAIC,MAAM,CAACJ,WAAX,EAAwB;AACtB,WAAOI,MAAM,CAACJ,WAAP,CAAmBC,IAAnB,CAAP;AACD,GAFD,MAEO;AACL,WAAO,IAAIG,MAAJ,CAAWH,IAAX,CAAP;AACD;AACF;;AAEDI,MAAM,CAACC,OAAP,GAAiBN,WAAjB","sourcesContent":["function allocUnsafe (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  }\n\n  if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n\n  if (Buffer.allocUnsafe) {\n    return Buffer.allocUnsafe(size)\n  } else {\n    return new Buffer(size)\n  }\n}\n\nmodule.exports = allocUnsafe\n"]},"metadata":{},"sourceType":"script"}