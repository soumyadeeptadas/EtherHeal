{"ast":null,"code":"'use strict';\n\nconst ciphers = require('./ciphers');\n\nconst CIPHER_MODES = {\n  16: 'aes-128-ctr',\n  32: 'aes-256-ctr'\n};\n\nexports.create = function (key, iv, callback) {\n  const mode = CIPHER_MODES[key.length];\n\n  if (!mode) {\n    return callback(new Error('Invalid key length'));\n  }\n\n  const cipher = ciphers.createCipheriv(mode, key, iv);\n  const decipher = ciphers.createDecipheriv(mode, key, iv);\n  const res = {\n    encrypt(data, cb) {\n      cb(null, cipher.update(data));\n    },\n\n    decrypt(data, cb) {\n      cb(null, decipher.update(data));\n    }\n\n  };\n  callback(null, res);\n};","map":{"version":3,"sources":["z:/Projects/EtherealOrgan/Complete Project/client/node_modules/libp2p-crypto/src/aes/index.js"],"names":["ciphers","require","CIPHER_MODES","exports","create","key","iv","callback","mode","length","Error","cipher","createCipheriv","decipher","createDecipheriv","res","encrypt","data","cb","update","decrypt"],"mappings":"AAAA;;AAEA,MAAMA,OAAO,GAAGC,OAAO,CAAC,WAAD,CAAvB;;AAEA,MAAMC,YAAY,GAAG;AACnB,MAAI,aADe;AAEnB,MAAI;AAFe,CAArB;;AAKAC,OAAO,CAACC,MAAR,GAAiB,UAAUC,GAAV,EAAeC,EAAf,EAAmBC,QAAnB,EAA6B;AAC5C,QAAMC,IAAI,GAAGN,YAAY,CAACG,GAAG,CAACI,MAAL,CAAzB;;AACA,MAAI,CAACD,IAAL,EAAW;AACT,WAAOD,QAAQ,CAAC,IAAIG,KAAJ,CAAU,oBAAV,CAAD,CAAf;AACD;;AAED,QAAMC,MAAM,GAAGX,OAAO,CAACY,cAAR,CAAuBJ,IAAvB,EAA6BH,GAA7B,EAAkCC,EAAlC,CAAf;AACA,QAAMO,QAAQ,GAAGb,OAAO,CAACc,gBAAR,CAAyBN,IAAzB,EAA+BH,GAA/B,EAAoCC,EAApC,CAAjB;AAEA,QAAMS,GAAG,GAAG;AACVC,IAAAA,OAAO,CAAEC,IAAF,EAAQC,EAAR,EAAY;AACjBA,MAAAA,EAAE,CAAC,IAAD,EAAOP,MAAM,CAACQ,MAAP,CAAcF,IAAd,CAAP,CAAF;AACD,KAHS;;AAKVG,IAAAA,OAAO,CAAEH,IAAF,EAAQC,EAAR,EAAY;AACjBA,MAAAA,EAAE,CAAC,IAAD,EAAOL,QAAQ,CAACM,MAAT,CAAgBF,IAAhB,CAAP,CAAF;AACD;;AAPS,GAAZ;AAUAV,EAAAA,QAAQ,CAAC,IAAD,EAAOQ,GAAP,CAAR;AACD,CApBD","sourcesContent":["'use strict'\n\nconst ciphers = require('./ciphers')\n\nconst CIPHER_MODES = {\n  16: 'aes-128-ctr',\n  32: 'aes-256-ctr'\n}\n\nexports.create = function (key, iv, callback) {\n  const mode = CIPHER_MODES[key.length]\n  if (!mode) {\n    return callback(new Error('Invalid key length'))\n  }\n\n  const cipher = ciphers.createCipheriv(mode, key, iv)\n  const decipher = ciphers.createDecipheriv(mode, key, iv)\n\n  const res = {\n    encrypt (data, cb) {\n      cb(null, cipher.update(data))\n    },\n\n    decrypt (data, cb) {\n      cb(null, decipher.update(data))\n    }\n  }\n\n  callback(null, res)\n}\n"]},"metadata":{},"sourceType":"script"}