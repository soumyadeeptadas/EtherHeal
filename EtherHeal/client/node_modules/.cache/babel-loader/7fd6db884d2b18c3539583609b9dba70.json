{"ast":null,"code":"'use strict';\n\nvar util = require('util');\n\nvar stream = require('stream');\n\nmodule.exports.createReadStream = function (object, options) {\n  return new MultiStream(object, options);\n};\n\nvar MultiStream = function (object, options) {\n  if (object instanceof Buffer || typeof object === 'string') {\n    options = options || {};\n    stream.Readable.call(this, {\n      highWaterMark: options.highWaterMark,\n      encoding: options.encoding\n    });\n  } else {\n    stream.Readable.call(this, {\n      objectMode: true\n    });\n  }\n\n  this._object = object;\n};\n\nutil.inherits(MultiStream, stream.Readable);\n\nMultiStream.prototype._read = function () {\n  this.push(this._object);\n  this._object = null;\n};","map":{"version":3,"sources":["z:/Projects/EtherealOrgan-copy/Complete Project/client/node_modules/streamifier/lib/index.js"],"names":["util","require","stream","module","exports","createReadStream","object","options","MultiStream","Buffer","Readable","call","highWaterMark","encoding","objectMode","_object","inherits","prototype","_read","push"],"mappings":"AAAA;;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAApB;;AAEAE,MAAM,CAACC,OAAP,CAAeC,gBAAf,GAAkC,UAAUC,MAAV,EAAkBC,OAAlB,EAA2B;AAC3D,SAAO,IAAIC,WAAJ,CAAiBF,MAAjB,EAAyBC,OAAzB,CAAP;AACD,CAFD;;AAIA,IAAIC,WAAW,GAAG,UAAUF,MAAV,EAAkBC,OAAlB,EAA2B;AAC3C,MAAID,MAAM,YAAYG,MAAlB,IAA4B,OAAOH,MAAP,KAAkB,QAAlD,EAA4D;AAC1DC,IAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AACAL,IAAAA,MAAM,CAACQ,QAAP,CAAgBC,IAAhB,CAAqB,IAArB,EAA2B;AACzBC,MAAAA,aAAa,EAAEL,OAAO,CAACK,aADE;AAEzBC,MAAAA,QAAQ,EAAEN,OAAO,CAACM;AAFO,KAA3B;AAID,GAND,MAMO;AACLX,IAAAA,MAAM,CAACQ,QAAP,CAAgBC,IAAhB,CAAqB,IAArB,EAA2B;AAAEG,MAAAA,UAAU,EAAE;AAAd,KAA3B;AACD;;AACD,OAAKC,OAAL,GAAeT,MAAf;AACD,CAXD;;AAaAN,IAAI,CAACgB,QAAL,CAAcR,WAAd,EAA2BN,MAAM,CAACQ,QAAlC;;AAEAF,WAAW,CAACS,SAAZ,CAAsBC,KAAtB,GAA8B,YAAY;AACxC,OAAKC,IAAL,CAAU,KAAKJ,OAAf;AACA,OAAKA,OAAL,GAAe,IAAf;AACD,CAHD","sourcesContent":["'use strict';\n\nvar util = require('util');\nvar stream = require('stream');\n\nmodule.exports.createReadStream = function (object, options) {\n  return new MultiStream (object, options);\n};\n\nvar MultiStream = function (object, options) {\n  if (object instanceof Buffer || typeof object === 'string') {\n    options = options || {};\n    stream.Readable.call(this, {\n      highWaterMark: options.highWaterMark,\n      encoding: options.encoding\n    });\n  } else {\n    stream.Readable.call(this, { objectMode: true });\n  }\n  this._object = object;\n};\n\nutil.inherits(MultiStream, stream.Readable);\n\nMultiStream.prototype._read = function () {\n  this.push(this._object);\n  this._object = null;\n};"]},"metadata":{},"sourceType":"script"}