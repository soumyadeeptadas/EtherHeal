{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"z:\\\\Projects\\\\EtherealOrgan-copy\\\\Complete Project\\\\client\\\\src\\\\pages\\\\hospital\\\\Happrove.js\";\nimport React from \"react\";\nimport HosDrawer from \"./HospitalNav\";\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn, MDBIcon } from \"mdbreact\";\nimport axios from 'axios';\nimport ipfs from './ipfs'; //import Web3 from 'web3';\n\nimport getWeb3 from \"./getWeb3\";\nimport OC from './oc'; //import hospital from \"./images/hospital.png\";\n\nclass Hrecord extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: '',\n      email: '',\n      donorkey: '',\n      ipfsHash: '',\n      account: null,\n      EMRHash: '',\n      buffer: null,\n      address: \"\",\n      city: \"\",\n      contact: \"\",\n      bloodgroup: \"\",\n      organ: \"\"\n    };\n\n    this.componentDidMount = async () => {\n      console.log(\"Approve ke component ke andar\");\n      const acc = await window.localStorage.getItem(\"web3account\");\n      this.setState({\n        account: acc\n      });\n      console.log(this.state.account);\n    };\n\n    this.onSubmit = async () => {\n      event.preventDefault();\n      console.log(\"approve ke submit ke andar\");\n      axios.get(`/api/getdonor/${this.state.name}/${this.state.email}`).then(async res => {\n        console.log(res);\n        this.setState({\n          address: res.data.address,\n          city: res.data.city,\n          contact: res.data.contact,\n          bloodgroup: res.data.bloodgroup,\n          organ: res.data.organ\n        });\n        console.log(this.state);\n        const data = JSON.stringify({\n          name: this.state.name,\n          email: this.state.email,\n          city: this.state.city,\n          address: this.state.address,\n          contact: this.state.contact\n        });\n        console.log(data);\n        var buf = Buffer.from(JSON.stringify(data));\n        console.log(\"buffer:\", buf);\n        ipfs.files.add(buf, (error, result) => {\n          if (error) {\n            console.error(error);\n            return;\n          }\n\n          this.setState({\n            ipfsHash: result[0].hash\n          });\n          console.log('ipfsHash', this.state.ipfsHash);\n        });\n        ipfs.files.add(this.state.buffer, (error, result) => {\n          if (error) {\n            console.error(error);\n            return;\n          }\n\n          this.setState({\n            EMRHash: result[0].hash\n          });\n          console.log('EMRHash', this.state.EMRHash);\n        });\n        console.log('Donor key', this.state.donorkey);\n        setTimeout(() => {\n          OC.methods.adddonor(this.state.donorkey, this.state.ipfsHash, this.state.EMRHash, this.state.organ, this.state.bloodgroup).send({\n            from: this.state.account,\n            gas: 1000000\n          }).then(result => {\n            if (result.status == false) {\n              console.log(\"could not add donor. re-try again\");\n            } else if (result.status == true) {\n              console.log(\"donor gaya in blockchain\");\n              window.alert(\"The donor has been approved successfully!\");\n            }\n          });\n          axios.get(`/api/deletedonor/${this.state.name}/${this.state.email}`).then(async res => {\n            console.log(res);\n          });\n        }, 15000);\n      });\n    };\n  }\n\n  onfileChange(e) {\n    event.preventDefault();\n    const file = e.target.files[0];\n    const reader = new window.FileReader();\n    reader.readAsArrayBuffer(file);\n\n    reader.onloadend = () => {\n      this.setState({\n        buffer: Buffer(reader.result)\n      });\n      console.log('buffer', this.state.buffer);\n    };\n  }\n\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n    console.log(this.state);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(MDBContainer, {\n      className: \"\",\n      children: [/*#__PURE__*/_jsxDEV(HosDrawer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: /*#__PURE__*/_jsxDEV(MDBRow, {\n          className: \"mt-5\",\n          children: /*#__PURE__*/_jsxDEV(MDBCol, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"h5 text-center mb-4 mt-12 h1 display-3\",\n              children: \"Enter Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grey-text\",\n              children: [/*#__PURE__*/_jsxDEV(MDBInput, {\n                label: \"name\",\n                name: \"name\",\n                icon: \"user\",\n                group: true,\n                type: \"text\",\n                onChange: this.onChange.bind(this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n                label: \"email\",\n                icon: \"user\",\n                name: \"email\",\n                group: true,\n                type: \"text\",\n                onChange: this.onChange.bind(this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n                label: \"donorkey\",\n                icon: \"user\",\n                name: \"donorkey\",\n                group: true,\n                type: \"text\",\n                onChange: this.onChange.bind(this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                onChange: this.onfileChange.bind(this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center\",\n              onClick: this.onSubmit.bind(this),\n              children: /*#__PURE__*/_jsxDEV(MDBBtn, {\n                outline: true,\n                color: \"dark\",\n                children: [\"Submit \", /*#__PURE__*/_jsxDEV(MDBIcon, {\n                  far: true,\n                  icon: \"paper-plane\",\n                  className: \"ml-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 44\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Hrecord;","map":{"version":3,"sources":["z:/Projects/EtherealOrgan-copy/Complete Project/client/src/pages/hospital/Happrove.js"],"names":["React","HosDrawer","MDBContainer","MDBRow","MDBCol","MDBInput","MDBBtn","MDBIcon","axios","ipfs","getWeb3","OC","Hrecord","Component","state","name","email","donorkey","ipfsHash","account","EMRHash","buffer","address","city","contact","bloodgroup","organ","componentDidMount","console","log","acc","window","localStorage","getItem","setState","onSubmit","event","preventDefault","get","then","res","data","JSON","stringify","buf","Buffer","from","files","add","error","result","hash","setTimeout","methods","adddonor","send","gas","status","alert","onfileChange","e","file","target","reader","FileReader","readAsArrayBuffer","onloadend","onChange","value","render","bind"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,eAAtB;AACA,SAASC,YAAT,EAAuBC,MAAvB,EAA+BC,MAA/B,EAAuCC,QAAvC,EAAiDC,MAAjD,EAAyDC,OAAzD,QAAwE,UAAxE;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB,C,CACA;;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,EAAP,MAAe,MAAf,C,CACA;;AACA,MAAMC,OAAN,SAAsBZ,KAAK,CAACa,SAA5B,CAAsC;AAAA;AAAA;AAAA,SAElCC,KAFkC,GAE1B;AACJC,MAAAA,IAAI,EAAE,EADF;AAEJC,MAAAA,KAAK,EAAE,EAFH;AAGJC,MAAAA,QAAQ,EAAE,EAHN;AAIJC,MAAAA,QAAQ,EAAE,EAJN;AAKJC,MAAAA,OAAO,EAAE,IALL;AAMJC,MAAAA,OAAO,EAAE,EANL;AAOJC,MAAAA,MAAM,EAAE,IAPJ;AAQJC,MAAAA,OAAO,EAAE,EARL;AASJC,MAAAA,IAAI,EAAE,EATF;AAUJC,MAAAA,OAAO,EAAE,EAVL;AAWJC,MAAAA,UAAU,EAAE,EAXR;AAYJC,MAAAA,KAAK,EAAE;AAZH,KAF0B;;AAAA,SAgBlCC,iBAhBkC,GAgBd,YAAY;AAC5BC,MAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACA,YAAMC,GAAG,GAAG,MAAMC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,aAA5B,CAAlB;AACA,WAAKC,QAAL,CAAc;AAAEf,QAAAA,OAAO,EAAEW;AAAX,OAAd;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKf,KAAL,CAAWK,OAAvB;AACH,KArBiC;;AAAA,SAqClCgB,QArCkC,GAqCvB,YAAY;AACnBC,MAAAA,KAAK,CAACC,cAAN;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACArB,MAAAA,KAAK,CAAC8B,GAAN,CAAW,iBAAgB,KAAKxB,KAAL,CAAWC,IAAK,IAAG,KAAKD,KAAL,CAAWE,KAAM,EAA/D,EACKuB,IADL,CACU,MAAOC,GAAP,IAAe;AACjBZ,QAAAA,OAAO,CAACC,GAAR,CAAYW,GAAZ;AACA,aAAKN,QAAL,CAAc;AACVZ,UAAAA,OAAO,EAAEkB,GAAG,CAACC,IAAJ,CAASnB,OADR;AAEVC,UAAAA,IAAI,EAAEiB,GAAG,CAACC,IAAJ,CAASlB,IAFL;AAGVC,UAAAA,OAAO,EAAEgB,GAAG,CAACC,IAAJ,CAASjB,OAHR;AAIVC,UAAAA,UAAU,EAAEe,GAAG,CAACC,IAAJ,CAAShB,UAJX;AAKVC,UAAAA,KAAK,EAAEc,GAAG,CAACC,IAAJ,CAASf;AALN,SAAd;AAOAE,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKf,KAAjB;AACA,cAAM2B,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AACxB5B,UAAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC,IADO;AAExBC,UAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWE,KAFM;AAGxBO,UAAAA,IAAI,EAAE,KAAKT,KAAL,CAAWS,IAHO;AAIxBD,UAAAA,OAAO,EAAE,KAAKR,KAAL,CAAWQ,OAJI;AAKxBE,UAAAA,OAAO,EAAE,KAAKV,KAAL,CAAWU;AALI,SAAf,CAAb;AAOAI,QAAAA,OAAO,CAACC,GAAR,CAAYY,IAAZ;AACA,YAAIG,GAAG,GAAGC,MAAM,CAACC,IAAP,CAAYJ,IAAI,CAACC,SAAL,CAAeF,IAAf,CAAZ,CAAV;AACAb,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBe,GAAvB;AACAnC,QAAAA,IAAI,CAACsC,KAAL,CAAWC,GAAX,CAAeJ,GAAf,EAAoB,CAACK,KAAD,EAAQC,MAAR,KAAmB;AACnC,cAAID,KAAJ,EAAW;AACPrB,YAAAA,OAAO,CAACqB,KAAR,CAAcA,KAAd;AACA;AACH;;AACD,eAAKf,QAAL,CAAc;AAAEhB,YAAAA,QAAQ,EAAEgC,MAAM,CAAC,CAAD,CAAN,CAAUC;AAAtB,WAAd;AACAvB,UAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB,KAAKf,KAAL,CAAWI,QAAnC;AACH,SAPD;AAQAT,QAAAA,IAAI,CAACsC,KAAL,CAAWC,GAAX,CAAe,KAAKlC,KAAL,CAAWO,MAA1B,EAAkC,CAAC4B,KAAD,EAAQC,MAAR,KAAmB;AACjD,cAAID,KAAJ,EAAW;AACPrB,YAAAA,OAAO,CAACqB,KAAR,CAAcA,KAAd;AACA;AACH;;AACD,eAAKf,QAAL,CAAc;AAAEd,YAAAA,OAAO,EAAE8B,MAAM,CAAC,CAAD,CAAN,CAAUC;AAArB,WAAd;AACAvB,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuB,KAAKf,KAAL,CAAWM,OAAlC;AACH,SAPD;AAQAQ,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyB,KAAKf,KAAL,CAAWG,QAApC;AACAmC,QAAAA,UAAU,CAAC,MAAM;AACbzC,UAAAA,EAAE,CAAC0C,OAAH,CAAWC,QAAX,CAAoB,KAAKxC,KAAL,CAAWG,QAA/B,EAAyC,KAAKH,KAAL,CAAWI,QAApD,EAA8D,KAAKJ,KAAL,CAAWM,OAAzE,EAAkF,KAAKN,KAAL,CAAWY,KAA7F,EAAoG,KAAKZ,KAAL,CAAWW,UAA/G,EAA2H8B,IAA3H,CAAgI;AAC5HT,YAAAA,IAAI,EAAE,KAAKhC,KAAL,CAAWK,OAD2G;AAE5HqC,YAAAA,GAAG,EAAE;AAFuH,WAAhI,EAKKjB,IALL,CAKWW,MAAD,IAAY;AACd,gBAAIA,MAAM,CAACO,MAAP,IAAiB,KAArB,EAA4B;AACxB7B,cAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ;AACH,aAFD,MAGK,IAAIqB,MAAM,CAACO,MAAP,IAAiB,IAArB,EAA2B;AAC5B7B,cAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACAE,cAAAA,MAAM,CAAC2B,KAAP,CAAa,2CAAb;AACH;AACJ,WAbL;AAcJlD,UAAAA,KAAK,CAAC8B,GAAN,CAAW,oBAAmB,KAAKxB,KAAL,CAAWC,IAAK,IAAG,KAAKD,KAAL,CAAWE,KAAM,EAAlE,EACCuB,IADD,CACM,MAAOC,GAAP,IAAe;AAErBZ,YAAAA,OAAO,CAACC,GAAR,CAAYW,GAAZ;AACC,WAJD;AAMC,SArBS,EAqBP,KArBO,CAAV;AAuBH,OA7DL;AA8DH,KAtGiC;AAAA;;AAsBlCmB,EAAAA,YAAY,CAACC,CAAD,EAAI;AACZxB,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMwB,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASf,KAAT,CAAe,CAAf,CAAb;AACA,UAAMgB,MAAM,GAAG,IAAIhC,MAAM,CAACiC,UAAX,EAAf;AACAD,IAAAA,MAAM,CAACE,iBAAP,CAAyBJ,IAAzB;;AACAE,IAAAA,MAAM,CAACG,SAAP,GAAmB,MAAM;AACrB,WAAKhC,QAAL,CAAc;AAAEb,QAAAA,MAAM,EAAEwB,MAAM,CAACkB,MAAM,CAACb,MAAR;AAAhB,OAAd;AACAtB,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB,KAAKf,KAAL,CAAWO,MAAjC;AACH,KAHD;AAIH;;AAED8C,EAAAA,QAAQ,CAACP,CAAD,EAAI;AACR,SAAK1B,QAAL,CAAc;AAAE,OAAC0B,CAAC,CAACE,MAAF,CAAS/C,IAAV,GAAiB6C,CAAC,CAACE,MAAF,CAASM;AAA5B,KAAd;AACAxC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKf,KAAjB;AACH;;AAqEDuD,EAAAA,MAAM,GAAG;AACL,wBAEI,QAAC,YAAD;AAAc,MAAA,SAAS,EAAC,EAAxB;AAAA,8BACI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,+BACI,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAC,MAAlB;AAAA,iCAEI,QAAC,MAAD;AAAA,oCAEI;AAAG,cAAA,SAAS,EAAC,wCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAK,cAAA,SAAS,EAAC,WAAf;AAAA,sCACI,QAAC,QAAD;AACI,gBAAA,KAAK,EAAC,MADV;AAEI,gBAAA,IAAI,EAAC,MAFT;AAGI,gBAAA,IAAI,EAAC,MAHT;AAII,gBAAA,KAAK,MAJT;AAKI,gBAAA,IAAI,EAAC,MALT;AAMI,gBAAA,QAAQ,EAAE,KAAKF,QAAL,CAAcG,IAAd,CAAmB,IAAnB;AANd;AAAA;AAAA;AAAA;AAAA,sBADJ,eAUI,QAAC,QAAD;AACI,gBAAA,KAAK,EAAC,OADV;AAEI,gBAAA,IAAI,EAAC,MAFT;AAGI,gBAAA,IAAI,EAAC,OAHT;AAII,gBAAA,KAAK,MAJT;AAKI,gBAAA,IAAI,EAAC,MALT;AAMI,gBAAA,QAAQ,EAAE,KAAKH,QAAL,CAAcG,IAAd,CAAmB,IAAnB;AANd;AAAA;AAAA;AAAA;AAAA,sBAVJ,eAoBI,QAAC,QAAD;AACI,gBAAA,KAAK,EAAC,UADV;AAEI,gBAAA,IAAI,EAAC,MAFT;AAGI,gBAAA,IAAI,EAAC,UAHT;AAII,gBAAA,KAAK,MAJT;AAKI,gBAAA,IAAI,EAAC,MALT;AAMI,gBAAA,QAAQ,EAAE,KAAKH,QAAL,CAAcG,IAAd,CAAmB,IAAnB;AANd;AAAA;AAAA;AAAA;AAAA,sBApBJ,eA8BI;AAAO,gBAAA,IAAI,EAAC,MAAZ;AAAmB,gBAAA,QAAQ,EAAE,KAAKX,YAAL,CAAkBW,IAAlB,CAAuB,IAAvB;AAA7B;AAAA;AAAA;AAAA;AAAA,sBA9BJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAyDI;AAAK,cAAA,SAAS,EAAC,aAAf;AAA6B,cAAA,OAAO,EAAE,KAAKnC,QAAL,CAAcmC,IAAd,CAAmB,IAAnB,CAAtC;AAAA,qCACI,QAAC,MAAD;AAAQ,gBAAA,OAAO,MAAf;AAAgB,gBAAA,KAAK,EAAC,MAAtB;AAAA,mDACW,QAAC,OAAD;AAAS,kBAAA,GAAG,MAAZ;AAAa,kBAAA,IAAI,EAAC,aAAlB;AAAgC,kBAAA,SAAS,EAAC;AAA1C;AAAA;AAAA;AAAA;AAAA,wBADX;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAzDJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AA8EH;;AAxLiC;;AA6LtC,eAAe1D,OAAf","sourcesContent":["import React from \"react\";\nimport HosDrawer from \"./HospitalNav\";\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn, MDBIcon } from \"mdbreact\";\nimport axios from 'axios';\nimport ipfs from './ipfs';\n//import Web3 from 'web3';\nimport getWeb3 from \"./getWeb3\";\nimport OC from './oc';\n//import hospital from \"./images/hospital.png\";\nclass Hrecord extends React.Component {\n\n    state = {\n        name: '',\n        email: '',\n        donorkey: '',\n        ipfsHash: '',\n        account: null,\n        EMRHash: '',\n        buffer: null,\n        address: \"\",\n        city: \"\",\n        contact: \"\",\n        bloodgroup: \"\",\n        organ: \"\"\n    }\n    componentDidMount = async () => {\n        console.log(\"Approve ke component ke andar\");\n        const acc = await window.localStorage.getItem(\"web3account\");\n        this.setState({ account: acc });\n        console.log(this.state.account);\n    }\n    onfileChange(e) {\n        event.preventDefault()\n        const file = e.target.files[0]\n        const reader = new window.FileReader()\n        reader.readAsArrayBuffer(file)\n        reader.onloadend = () => {\n            this.setState({ buffer: Buffer(reader.result) })\n            console.log('buffer', this.state.buffer)\n        }\n    }\n\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n        console.log(this.state);\n    }\n    onSubmit = async () => {\n        event.preventDefault();\n        console.log(\"approve ke submit ke andar\");\n        axios.get(`/api/getdonor/${this.state.name}/${this.state.email}`)\n            .then(async (res) => {\n                console.log(res);\n                this.setState({\n                    address: res.data.address,\n                    city: res.data.city,\n                    contact: res.data.contact,\n                    bloodgroup: res.data.bloodgroup,\n                    organ: res.data.organ\n                });\n                console.log(this.state);\n                const data = JSON.stringify({\n                    name: this.state.name,\n                    email: this.state.email,\n                    city: this.state.city,\n                    address: this.state.address,\n                    contact: this.state.contact\n                });\n                console.log(data);\n                var buf = Buffer.from(JSON.stringify(data));\n                console.log(\"buffer:\", buf);\n                ipfs.files.add(buf, (error, result) => {\n                    if (error) {\n                        console.error(error)\n                        return\n                    }\n                    this.setState({ ipfsHash: result[0].hash });\n                    console.log('ipfsHash', this.state.ipfsHash);\n                });\n                ipfs.files.add(this.state.buffer, (error, result) => {\n                    if (error) {\n                        console.error(error)\n                        return\n                    }\n                    this.setState({ EMRHash: result[0].hash })\n                    console.log('EMRHash', this.state.EMRHash);\n                });\n                console.log('Donor key', this.state.donorkey);\n                setTimeout(() => {\n                    OC.methods.adddonor(this.state.donorkey, this.state.ipfsHash, this.state.EMRHash, this.state.organ, this.state.bloodgroup).send({\n                        from: this.state.account,\n                        gas: 1000000,\n                        \n                    })\n                        .then((result) => {\n                            if (result.status == false) {\n                                console.log(\"could not add donor. re-try again\");\n                            }\n                            else if (result.status == true) {\n                                console.log(\"donor gaya in blockchain\");\n                                window.alert(\"The donor has been approved successfully!\")\n                            }\n                        });\n                axios.get(`/api/deletedonor/${this.state.name}/${this.state.email}`)\n                .then(async (res) => {\n                \n                console.log(res);\n                });\n\n                }, 15000);\n\n            });\n    }\n\n\n    render() {\n        return (\n\n            <MDBContainer className=\"\">\n                <HosDrawer />\n                <form>\n                    <MDBRow className=\"mt-5\"  >\n\n                        <MDBCol>\n\n                            <p className=\"h5 text-center mb-4 mt-12 h1 display-3\">Enter Details</p>\n                            <div className=\"grey-text\">\n                                <MDBInput\n                                    label=\"name\"\n                                    name=\"name\"\n                                    icon=\"user\"\n                                    group\n                                    type=\"text\"\n                                    onChange={this.onChange.bind(this)}\n\n                                />\n                                <MDBInput\n                                    label=\"email\"\n                                    icon=\"user\"\n                                    name=\"email\"\n                                    group\n                                    type=\"text\"\n                                    onChange={this.onChange.bind(this)}\n\n\n                                />\n                                <MDBInput\n                                    label=\"donorkey\"\n                                    icon=\"user\"\n                                    name=\"donorkey\"\n                                    group\n                                    type=\"text\"\n                                    onChange={this.onChange.bind(this)}\n\n\n                                />\n                                <input type='file' onChange={this.onfileChange.bind(this)} />\n\n                                {/* <div className=\"input-group\">\n                                    <div className=\"input-group-prepend\">\n                                        <span className=\"input-group-text\" id=\"inputGroupFileAddon01\">\n                                            Upload\n                                </span>\n                                    </div>\n                                    <div className=\"custom-file\">\n                                        <input\n                                            type=\"file\"\n                                            name=\"file\"\n                                            className=\"custom-file-input\"\n                                            id=\"file\"\n                                            aria-describedby=\"inputGroupFileAddon01\"\n                                            onChange={this.onChange.bind(this)}\n\n                                        />\n                                        <label className=\"custom-file-label\" htmlFor=\"file\">\n                                            Choose file\n                                </label>\n                                    </div>\n                                </div> */}\n                            </div>\n                            <div className=\"text-center\" onClick={this.onSubmit.bind(this)}>\n                                <MDBBtn outline color=\"dark\">\n                                    Submit <MDBIcon far icon=\"paper-plane\" className=\"ml-1\" />\n                                </MDBBtn>\n                            </div>\n\n                        </MDBCol>\n                    </MDBRow>\n\n                </form>\n            </MDBContainer>\n\n\n        )\n    }\n}\n\n\n\nexport default Hrecord;"]},"metadata":{},"sourceType":"module"}