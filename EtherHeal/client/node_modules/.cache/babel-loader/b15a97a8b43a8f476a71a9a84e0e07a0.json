{"ast":null,"code":"var capability = require('./capability');\n\nvar inherits = require('inherits');\n\nvar response = require('./response');\n\nvar stream = require('readable-stream');\n\nvar IncomingMessage = response.IncomingMessage;\nvar rStates = response.readyStates;\n\nfunction decideMode(preferBinary, useFetch) {\n  if (capability.fetch && useFetch) {\n    return 'fetch';\n  } else if (capability.mozchunkedarraybuffer) {\n    return 'moz-chunked-arraybuffer';\n  } else if (capability.msstream) {\n    return 'ms-stream';\n  } else if (capability.arraybuffer && preferBinary) {\n    return 'arraybuffer';\n  } else {\n    return 'text';\n  }\n}\n\nvar ClientRequest = module.exports = function (opts) {\n  var self = this;\n  stream.Writable.call(self);\n  self._opts = opts;\n  self._body = [];\n  self._headers = {};\n  if (opts.auth) self.setHeader('Authorization', 'Basic ' + Buffer.from(opts.auth).toString('base64'));\n  Object.keys(opts.headers).forEach(function (name) {\n    self.setHeader(name, opts.headers[name]);\n  });\n  var preferBinary;\n  var useFetch = true;\n\n  if (opts.mode === 'disable-fetch' || 'requestTimeout' in opts && !capability.abortController) {\n    // If the use of XHR should be preferred. Not typically needed.\n    useFetch = false;\n    preferBinary = true;\n  } else if (opts.mode === 'prefer-streaming') {\n    // If streaming is a high priority but binary compatibility and\n    // the accuracy of the 'content-type' header aren't\n    preferBinary = false;\n  } else if (opts.mode === 'allow-wrong-content-type') {\n    // If streaming is more important than preserving the 'content-type' header\n    preferBinary = !capability.overrideMimeType;\n  } else if (!opts.mode || opts.mode === 'default' || opts.mode === 'prefer-fast') {\n    // Use binary if text streaming may corrupt data or the content-type header, or for speed\n    preferBinary = true;\n  } else {\n    throw new Error('Invalid value for opts.mode');\n  }\n\n  self._mode = decideMode(preferBinary, useFetch);\n  self._fetchTimer = null;\n  self.on('finish', function () {\n    self._onFinish();\n  });\n};\n\ninherits(ClientRequest, stream.Writable);\n\nClientRequest.prototype.setHeader = function (name, value) {\n  var self = this;\n  var lowerName = name.toLowerCase(); // This check is not necessary, but it prevents warnings from browsers about setting unsafe\n  // headers. To be honest I'm not entirely sure hiding these warnings is a good thing, but\n  // http-browserify did it, so I will too.\n\n  if (unsafeHeaders.indexOf(lowerName) !== -1) return;\n  self._headers[lowerName] = {\n    name: name,\n    value: value\n  };\n};\n\nClientRequest.prototype.getHeader = function (name) {\n  var header = this._headers[name.toLowerCase()];\n\n  if (header) return header.value;\n  return null;\n};\n\nClientRequest.prototype.removeHeader = function (name) {\n  var self = this;\n  delete self._headers[name.toLowerCase()];\n};\n\nClientRequest.prototype._onFinish = function () {\n  var self = this;\n  if (self._destroyed) return;\n  var opts = self._opts;\n  var headersObj = self._headers;\n  var body = null;\n\n  if (opts.method !== 'GET' && opts.method !== 'HEAD') {\n    body = new Blob(self._body, {\n      type: (headersObj['content-type'] || {}).value || ''\n    });\n  } // create flattened list of headers\n\n\n  var headersList = [];\n  Object.keys(headersObj).forEach(function (keyName) {\n    var name = headersObj[keyName].name;\n    var value = headersObj[keyName].value;\n\n    if (Array.isArray(value)) {\n      value.forEach(function (v) {\n        headersList.push([name, v]);\n      });\n    } else {\n      headersList.push([name, value]);\n    }\n  });\n\n  if (self._mode === 'fetch') {\n    var signal = null;\n\n    if (capability.abortController) {\n      var controller = new AbortController();\n      signal = controller.signal;\n      self._fetchAbortController = controller;\n\n      if ('requestTimeout' in opts && opts.requestTimeout !== 0) {\n        self._fetchTimer = global.setTimeout(function () {\n          self.emit('requestTimeout');\n          if (self._fetchAbortController) self._fetchAbortController.abort();\n        }, opts.requestTimeout);\n      }\n    }\n\n    global.fetch(self._opts.url, {\n      method: self._opts.method,\n      headers: headersList,\n      body: body || undefined,\n      mode: 'cors',\n      credentials: opts.withCredentials ? 'include' : 'same-origin',\n      signal: signal\n    }).then(function (response) {\n      self._fetchResponse = response;\n\n      self._connect();\n    }, function (reason) {\n      global.clearTimeout(self._fetchTimer);\n      if (!self._destroyed) self.emit('error', reason);\n    });\n  } else {\n    var xhr = self._xhr = new global.XMLHttpRequest();\n\n    try {\n      xhr.open(self._opts.method, self._opts.url, true);\n    } catch (err) {\n      process.nextTick(function () {\n        self.emit('error', err);\n      });\n      return;\n    } // Can't set responseType on really old browsers\n\n\n    if ('responseType' in xhr) xhr.responseType = self._mode;\n    if ('withCredentials' in xhr) xhr.withCredentials = !!opts.withCredentials;\n    if (self._mode === 'text' && 'overrideMimeType' in xhr) xhr.overrideMimeType('text/plain; charset=x-user-defined');\n\n    if ('requestTimeout' in opts) {\n      xhr.timeout = opts.requestTimeout;\n\n      xhr.ontimeout = function () {\n        self.emit('requestTimeout');\n      };\n    }\n\n    headersList.forEach(function (header) {\n      xhr.setRequestHeader(header[0], header[1]);\n    });\n    self._response = null;\n\n    xhr.onreadystatechange = function () {\n      switch (xhr.readyState) {\n        case rStates.LOADING:\n        case rStates.DONE:\n          self._onXHRProgress();\n\n          break;\n      }\n    }; // Necessary for streaming in Firefox, since xhr.response is ONLY defined\n    // in onprogress, not in onreadystatechange with xhr.readyState = 3\n\n\n    if (self._mode === 'moz-chunked-arraybuffer') {\n      xhr.onprogress = function () {\n        self._onXHRProgress();\n      };\n    }\n\n    xhr.onerror = function () {\n      if (self._destroyed) return;\n      self.emit('error', new Error('XHR error'));\n    };\n\n    try {\n      xhr.send(body);\n    } catch (err) {\n      process.nextTick(function () {\n        self.emit('error', err);\n      });\n      return;\n    }\n  }\n};\n/**\n * Checks if xhr.status is readable and non-zero, indicating no error.\n * Even though the spec says it should be available in readyState 3,\n * accessing it throws an exception in IE8\n */\n\n\nfunction statusValid(xhr) {\n  try {\n    var status = xhr.status;\n    return status !== null && status !== 0;\n  } catch (e) {\n    return false;\n  }\n}\n\nClientRequest.prototype._onXHRProgress = function () {\n  var self = this;\n  if (!statusValid(self._xhr) || self._destroyed) return;\n  if (!self._response) self._connect();\n\n  self._response._onXHRProgress();\n};\n\nClientRequest.prototype._connect = function () {\n  var self = this;\n  if (self._destroyed) return;\n  self._response = new IncomingMessage(self._xhr, self._fetchResponse, self._mode, self._fetchTimer);\n\n  self._response.on('error', function (err) {\n    self.emit('error', err);\n  });\n\n  self.emit('response', self._response);\n};\n\nClientRequest.prototype._write = function (chunk, encoding, cb) {\n  var self = this;\n\n  self._body.push(chunk);\n\n  cb();\n};\n\nClientRequest.prototype.abort = ClientRequest.prototype.destroy = function () {\n  var self = this;\n  self._destroyed = true;\n  global.clearTimeout(self._fetchTimer);\n  if (self._response) self._response._destroyed = true;\n  if (self._xhr) self._xhr.abort();else if (self._fetchAbortController) self._fetchAbortController.abort();\n};\n\nClientRequest.prototype.end = function (data, encoding, cb) {\n  var self = this;\n\n  if (typeof data === 'function') {\n    cb = data;\n    data = undefined;\n  }\n\n  stream.Writable.prototype.end.call(self, data, encoding, cb);\n};\n\nClientRequest.prototype.flushHeaders = function () {};\n\nClientRequest.prototype.setTimeout = function () {};\n\nClientRequest.prototype.setNoDelay = function () {};\n\nClientRequest.prototype.setSocketKeepAlive = function () {}; // Taken from http://www.w3.org/TR/XMLHttpRequest/#the-setrequestheader%28%29-method\n\n\nvar unsafeHeaders = ['accept-charset', 'accept-encoding', 'access-control-request-headers', 'access-control-request-method', 'connection', 'content-length', 'cookie', 'cookie2', 'date', 'dnt', 'expect', 'host', 'keep-alive', 'origin', 'referer', 'te', 'trailer', 'transfer-encoding', 'upgrade', 'via'];","map":{"version":3,"sources":["Z:/Projects/Organ-Donation-Transplant-Chain-master/Complete Project/client/node_modules/stream-http/lib/request.js"],"names":["capability","require","inherits","response","stream","IncomingMessage","rStates","readyStates","decideMode","preferBinary","useFetch","fetch","mozchunkedarraybuffer","msstream","arraybuffer","ClientRequest","module","exports","opts","self","Writable","call","_opts","_body","_headers","auth","setHeader","Buffer","from","toString","Object","keys","headers","forEach","name","mode","abortController","overrideMimeType","Error","_mode","_fetchTimer","on","_onFinish","prototype","value","lowerName","toLowerCase","unsafeHeaders","indexOf","getHeader","header","removeHeader","_destroyed","headersObj","body","method","Blob","type","headersList","keyName","Array","isArray","v","push","signal","controller","AbortController","_fetchAbortController","requestTimeout","global","setTimeout","emit","abort","url","undefined","credentials","withCredentials","then","_fetchResponse","_connect","reason","clearTimeout","xhr","_xhr","XMLHttpRequest","open","err","process","nextTick","responseType","timeout","ontimeout","setRequestHeader","_response","onreadystatechange","readyState","LOADING","DONE","_onXHRProgress","onprogress","onerror","send","statusValid","status","e","_write","chunk","encoding","cb","destroy","end","data","flushHeaders","setNoDelay","setSocketKeepAlive"],"mappings":"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","sourcesContent":["var capability = require('./capability')\nvar inherits = require('inherits')\nvar response = require('./response')\nvar stream = require('readable-stream')\n\nvar IncomingMessage = response.IncomingMessage\nvar rStates = response.readyStates\n\nfunction decideMode (preferBinary, useFetch) {\n\tif (capability.fetch && useFetch) {\n\t\treturn 'fetch'\n\t} else if (capability.mozchunkedarraybuffer) {\n\t\treturn 'moz-chunked-arraybuffer'\n\t} else if (capability.msstream) {\n\t\treturn 'ms-stream'\n\t} else if (capability.arraybuffer && preferBinary) {\n\t\treturn 'arraybuffer'\n\t} else {\n\t\treturn 'text'\n\t}\n}\n\nvar ClientRequest = module.exports = function (opts) {\n\tvar self = this\n\tstream.Writable.call(self)\n\n\tself._opts = opts\n\tself._body = []\n\tself._headers = {}\n\tif (opts.auth)\n\t\tself.setHeader('Authorization', 'Basic ' + Buffer.from(opts.auth).toString('base64'))\n\tObject.keys(opts.headers).forEach(function (name) {\n\t\tself.setHeader(name, opts.headers[name])\n\t})\n\n\tvar preferBinary\n\tvar useFetch = true\n\tif (opts.mode === 'disable-fetch' || ('requestTimeout' in opts && !capability.abortController)) {\n\t\t// If the use of XHR should be preferred. Not typically needed.\n\t\tuseFetch = false\n\t\tpreferBinary = true\n\t} else if (opts.mode === 'prefer-streaming') {\n\t\t// If streaming is a high priority but binary compatibility and\n\t\t// the accuracy of the 'content-type' header aren't\n\t\tpreferBinary = false\n\t} else if (opts.mode === 'allow-wrong-content-type') {\n\t\t// If streaming is more important than preserving the 'content-type' header\n\t\tpreferBinary = !capability.overrideMimeType\n\t} else if (!opts.mode || opts.mode === 'default' || opts.mode === 'prefer-fast') {\n\t\t// Use binary if text streaming may corrupt data or the content-type header, or for speed\n\t\tpreferBinary = true\n\t} else {\n\t\tthrow new Error('Invalid value for opts.mode')\n\t}\n\tself._mode = decideMode(preferBinary, useFetch)\n\tself._fetchTimer = null\n\n\tself.on('finish', function () {\n\t\tself._onFinish()\n\t})\n}\n\ninherits(ClientRequest, stream.Writable)\n\nClientRequest.prototype.setHeader = function (name, value) {\n\tvar self = this\n\tvar lowerName = name.toLowerCase()\n\t// This check is not necessary, but it prevents warnings from browsers about setting unsafe\n\t// headers. To be honest I'm not entirely sure hiding these warnings is a good thing, but\n\t// http-browserify did it, so I will too.\n\tif (unsafeHeaders.indexOf(lowerName) !== -1)\n\t\treturn\n\n\tself._headers[lowerName] = {\n\t\tname: name,\n\t\tvalue: value\n\t}\n}\n\nClientRequest.prototype.getHeader = function (name) {\n\tvar header = this._headers[name.toLowerCase()]\n\tif (header)\n\t\treturn header.value\n\treturn null\n}\n\nClientRequest.prototype.removeHeader = function (name) {\n\tvar self = this\n\tdelete self._headers[name.toLowerCase()]\n}\n\nClientRequest.prototype._onFinish = function () {\n\tvar self = this\n\n\tif (self._destroyed)\n\t\treturn\n\tvar opts = self._opts\n\n\tvar headersObj = self._headers\n\tvar body = null\n\tif (opts.method !== 'GET' && opts.method !== 'HEAD') {\n        body = new Blob(self._body, {\n            type: (headersObj['content-type'] || {}).value || ''\n        });\n    }\n\n\t// create flattened list of headers\n\tvar headersList = []\n\tObject.keys(headersObj).forEach(function (keyName) {\n\t\tvar name = headersObj[keyName].name\n\t\tvar value = headersObj[keyName].value\n\t\tif (Array.isArray(value)) {\n\t\t\tvalue.forEach(function (v) {\n\t\t\t\theadersList.push([name, v])\n\t\t\t})\n\t\t} else {\n\t\t\theadersList.push([name, value])\n\t\t}\n\t})\n\n\tif (self._mode === 'fetch') {\n\t\tvar signal = null\n\t\tif (capability.abortController) {\n\t\t\tvar controller = new AbortController()\n\t\t\tsignal = controller.signal\n\t\t\tself._fetchAbortController = controller\n\n\t\t\tif ('requestTimeout' in opts && opts.requestTimeout !== 0) {\n\t\t\t\tself._fetchTimer = global.setTimeout(function () {\n\t\t\t\t\tself.emit('requestTimeout')\n\t\t\t\t\tif (self._fetchAbortController)\n\t\t\t\t\t\tself._fetchAbortController.abort()\n\t\t\t\t}, opts.requestTimeout)\n\t\t\t}\n\t\t}\n\n\t\tglobal.fetch(self._opts.url, {\n\t\t\tmethod: self._opts.method,\n\t\t\theaders: headersList,\n\t\t\tbody: body || undefined,\n\t\t\tmode: 'cors',\n\t\t\tcredentials: opts.withCredentials ? 'include' : 'same-origin',\n\t\t\tsignal: signal\n\t\t}).then(function (response) {\n\t\t\tself._fetchResponse = response\n\t\t\tself._connect()\n\t\t}, function (reason) {\n\t\t\tglobal.clearTimeout(self._fetchTimer)\n\t\t\tif (!self._destroyed)\n\t\t\t\tself.emit('error', reason)\n\t\t})\n\t} else {\n\t\tvar xhr = self._xhr = new global.XMLHttpRequest()\n\t\ttry {\n\t\t\txhr.open(self._opts.method, self._opts.url, true)\n\t\t} catch (err) {\n\t\t\tprocess.nextTick(function () {\n\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t\treturn\n\t\t}\n\n\t\t// Can't set responseType on really old browsers\n\t\tif ('responseType' in xhr)\n\t\t\txhr.responseType = self._mode\n\n\t\tif ('withCredentials' in xhr)\n\t\t\txhr.withCredentials = !!opts.withCredentials\n\n\t\tif (self._mode === 'text' && 'overrideMimeType' in xhr)\n\t\t\txhr.overrideMimeType('text/plain; charset=x-user-defined')\n\n\t\tif ('requestTimeout' in opts) {\n\t\t\txhr.timeout = opts.requestTimeout\n\t\t\txhr.ontimeout = function () {\n\t\t\t\tself.emit('requestTimeout')\n\t\t\t}\n\t\t}\n\n\t\theadersList.forEach(function (header) {\n\t\t\txhr.setRequestHeader(header[0], header[1])\n\t\t})\n\n\t\tself._response = null\n\t\txhr.onreadystatechange = function () {\n\t\t\tswitch (xhr.readyState) {\n\t\t\t\tcase rStates.LOADING:\n\t\t\t\tcase rStates.DONE:\n\t\t\t\t\tself._onXHRProgress()\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\t// Necessary for streaming in Firefox, since xhr.response is ONLY defined\n\t\t// in onprogress, not in onreadystatechange with xhr.readyState = 3\n\t\tif (self._mode === 'moz-chunked-arraybuffer') {\n\t\t\txhr.onprogress = function () {\n\t\t\t\tself._onXHRProgress()\n\t\t\t}\n\t\t}\n\n\t\txhr.onerror = function () {\n\t\t\tif (self._destroyed)\n\t\t\t\treturn\n\t\t\tself.emit('error', new Error('XHR error'))\n\t\t}\n\n\t\ttry {\n\t\t\txhr.send(body)\n\t\t} catch (err) {\n\t\t\tprocess.nextTick(function () {\n\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t\treturn\n\t\t}\n\t}\n}\n\n/**\n * Checks if xhr.status is readable and non-zero, indicating no error.\n * Even though the spec says it should be available in readyState 3,\n * accessing it throws an exception in IE8\n */\nfunction statusValid (xhr) {\n\ttry {\n\t\tvar status = xhr.status\n\t\treturn (status !== null && status !== 0)\n\t} catch (e) {\n\t\treturn false\n\t}\n}\n\nClientRequest.prototype._onXHRProgress = function () {\n\tvar self = this\n\n\tif (!statusValid(self._xhr) || self._destroyed)\n\t\treturn\n\n\tif (!self._response)\n\t\tself._connect()\n\n\tself._response._onXHRProgress()\n}\n\nClientRequest.prototype._connect = function () {\n\tvar self = this\n\n\tif (self._destroyed)\n\t\treturn\n\n\tself._response = new IncomingMessage(self._xhr, self._fetchResponse, self._mode, self._fetchTimer)\n\tself._response.on('error', function(err) {\n\t\tself.emit('error', err)\n\t})\n\n\tself.emit('response', self._response)\n}\n\nClientRequest.prototype._write = function (chunk, encoding, cb) {\n\tvar self = this\n\n\tself._body.push(chunk)\n\tcb()\n}\n\nClientRequest.prototype.abort = ClientRequest.prototype.destroy = function () {\n\tvar self = this\n\tself._destroyed = true\n\tglobal.clearTimeout(self._fetchTimer)\n\tif (self._response)\n\t\tself._response._destroyed = true\n\tif (self._xhr)\n\t\tself._xhr.abort()\n\telse if (self._fetchAbortController)\n\t\tself._fetchAbortController.abort()\n}\n\nClientRequest.prototype.end = function (data, encoding, cb) {\n\tvar self = this\n\tif (typeof data === 'function') {\n\t\tcb = data\n\t\tdata = undefined\n\t}\n\n\tstream.Writable.prototype.end.call(self, data, encoding, cb)\n}\n\nClientRequest.prototype.flushHeaders = function () {}\nClientRequest.prototype.setTimeout = function () {}\nClientRequest.prototype.setNoDelay = function () {}\nClientRequest.prototype.setSocketKeepAlive = function () {}\n\n// Taken from http://www.w3.org/TR/XMLHttpRequest/#the-setrequestheader%28%29-method\nvar unsafeHeaders = [\n\t'accept-charset',\n\t'accept-encoding',\n\t'access-control-request-headers',\n\t'access-control-request-method',\n\t'connection',\n\t'content-length',\n\t'cookie',\n\t'cookie2',\n\t'date',\n\t'dnt',\n\t'expect',\n\t'host',\n\t'keep-alive',\n\t'origin',\n\t'referer',\n\t'te',\n\t'trailer',\n\t'transfer-encoding',\n\t'upgrade',\n\t'via'\n]\n"]},"metadata":{},"sourceType":"script"}