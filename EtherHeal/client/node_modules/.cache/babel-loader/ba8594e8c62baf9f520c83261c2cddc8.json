{"ast":null,"code":"'use strict';\n\nconst cleanCID = require('../utils/clean-cid');\n\nconst v = require('is-ipfs');\n\nconst toPull = require('stream-to-pull-stream');\n\nconst deferred = require('pull-defer');\n\nmodule.exports = send => {\n  return (hash, opts) => {\n    opts = opts || {};\n    const p = deferred.source();\n\n    try {\n      hash = cleanCID(hash);\n    } catch (err) {\n      if (!v.ipfsPath(hash)) {\n        return p.end(err);\n      }\n    }\n\n    const query = {\n      offset: opts.offset,\n      length: opts.length\n    };\n    send({\n      path: 'cat',\n      args: hash,\n      buffer: opts.buffer,\n      qs: query\n    }, (err, stream) => {\n      if (err) {\n        return p.end(err);\n      }\n\n      p.resolve(toPull(stream));\n    });\n    return p;\n  };\n};","map":{"version":3,"sources":["z:/Projects/EtherealOrgan/Complete Project/client/node_modules/ipfs-api/src/files/cat-pull-stream.js"],"names":["cleanCID","require","v","toPull","deferred","module","exports","send","hash","opts","p","source","err","ipfsPath","end","query","offset","length","path","args","buffer","qs","stream","resolve"],"mappings":"AAAA;;AAEA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,oBAAD,CAAxB;;AACA,MAAMC,CAAC,GAAGD,OAAO,CAAC,SAAD,CAAjB;;AACA,MAAME,MAAM,GAAGF,OAAO,CAAC,uBAAD,CAAtB;;AACA,MAAMG,QAAQ,GAAGH,OAAO,CAAC,YAAD,CAAxB;;AAEAI,MAAM,CAACC,OAAP,GAAkBC,IAAD,IAAU;AACzB,SAAO,CAACC,IAAD,EAAOC,IAAP,KAAgB;AACrBA,IAAAA,IAAI,GAAGA,IAAI,IAAI,EAAf;AAEA,UAAMC,CAAC,GAAGN,QAAQ,CAACO,MAAT,EAAV;;AAEA,QAAI;AACFH,MAAAA,IAAI,GAAGR,QAAQ,CAACQ,IAAD,CAAf;AACD,KAFD,CAEE,OAAOI,GAAP,EAAY;AACZ,UAAI,CAACV,CAAC,CAACW,QAAF,CAAWL,IAAX,CAAL,EAAuB;AACrB,eAAOE,CAAC,CAACI,GAAF,CAAMF,GAAN,CAAP;AACD;AACF;;AAED,UAAMG,KAAK,GAAG;AACZC,MAAAA,MAAM,EAAEP,IAAI,CAACO,MADD;AAEZC,MAAAA,MAAM,EAAER,IAAI,CAACQ;AAFD,KAAd;AAKAV,IAAAA,IAAI,CAAC;AAAEW,MAAAA,IAAI,EAAE,KAAR;AAAeC,MAAAA,IAAI,EAAEX,IAArB;AAA2BY,MAAAA,MAAM,EAAEX,IAAI,CAACW,MAAxC;AAAgDC,MAAAA,EAAE,EAAEN;AAApD,KAAD,EAA8D,CAACH,GAAD,EAAMU,MAAN,KAAiB;AACjF,UAAIV,GAAJ,EAAS;AAAE,eAAOF,CAAC,CAACI,GAAF,CAAMF,GAAN,CAAP;AAAmB;;AAE9BF,MAAAA,CAAC,CAACa,OAAF,CAAUpB,MAAM,CAACmB,MAAD,CAAhB;AACD,KAJG,CAAJ;AAMA,WAAOZ,CAAP;AACD,GAzBD;AA0BD,CA3BD","sourcesContent":["'use strict'\n\nconst cleanCID = require('../utils/clean-cid')\nconst v = require('is-ipfs')\nconst toPull = require('stream-to-pull-stream')\nconst deferred = require('pull-defer')\n\nmodule.exports = (send) => {\n  return (hash, opts) => {\n    opts = opts || {}\n\n    const p = deferred.source()\n\n    try {\n      hash = cleanCID(hash)\n    } catch (err) {\n      if (!v.ipfsPath(hash)) {\n        return p.end(err)\n      }\n    }\n\n    const query = {\n      offset: opts.offset,\n      length: opts.length\n    }\n\n    send({ path: 'cat', args: hash, buffer: opts.buffer, qs: query }, (err, stream) => {\n      if (err) { return p.end(err) }\n\n      p.resolve(toPull(stream))\n    })\n\n    return p\n  }\n}\n"]},"metadata":{},"sourceType":"script"}