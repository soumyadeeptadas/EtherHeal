{"ast":null,"code":"'use strict';\n\nmodule.exports = LRUCache; // This will be a proper iterable 'Map' in engines that support it,\n// or a fakey-fake PseudoMap in older versions.\n\nvar Map = require('pseudomap');\n\nvar util = require('util'); // A linked list to keep track of recently-used-ness\n\n\nvar Yallist = require('yallist'); // use symbols if possible, otherwise just _props\n\n\nvar hasSymbol = typeof Symbol === 'function' && process.env._nodeLRUCacheForceNoSymbol !== '1';\nvar makeSymbol;\n\nif (hasSymbol) {\n  makeSymbol = function (key) {\n    return Symbol(key);\n  };\n} else {\n  makeSymbol = function (key) {\n    return '_' + key;\n  };\n}\n\nvar MAX = makeSymbol('max');\nvar LENGTH = makeSymbol('length');\nvar LENGTH_CALCULATOR = makeSymbol('lengthCalculator');\nvar ALLOW_STALE = makeSymbol('allowStale');\nvar MAX_AGE = makeSymbol('maxAge');\nvar DISPOSE = makeSymbol('dispose');\nvar NO_DISPOSE_ON_SET = makeSymbol('noDisposeOnSet');\nvar LRU_LIST = makeSymbol('lruList');\nvar CACHE = makeSymbol('cache');\n\nfunction naiveLength() {\n  return 1;\n} // lruList is a yallist where the head is the youngest\n// item, and the tail is the oldest.  the list contains the Hit\n// objects as the entries.\n// Each Hit object has a reference to its Yallist.Node.  This\n// never changes.\n//\n// cache is a Map (or PseudoMap) that matches the keys to\n// the Yallist.Node object.\n\n\nfunction LRUCache(options) {\n  if (!(this instanceof LRUCache)) {\n    return new LRUCache(options);\n  }\n\n  if (typeof options === 'number') {\n    options = {\n      max: options\n    };\n  }\n\n  if (!options) {\n    options = {};\n  }\n\n  var max = this[MAX] = options.max; // Kind of weird to have a default max of Infinity, but oh well.\n\n  if (!max || !(typeof max === 'number') || max <= 0) {\n    this[MAX] = Infinity;\n  }\n\n  var lc = options.length || naiveLength;\n\n  if (typeof lc !== 'function') {\n    lc = naiveLength;\n  }\n\n  this[LENGTH_CALCULATOR] = lc;\n  this[ALLOW_STALE] = options.stale || false;\n  this[MAX_AGE] = options.maxAge || 0;\n  this[DISPOSE] = options.dispose;\n  this[NO_DISPOSE_ON_SET] = options.noDisposeOnSet || false;\n  this.reset();\n} // resize the cache when the max changes.\n\n\nObject.defineProperty(LRUCache.prototype, 'max', {\n  set: function (mL) {\n    if (!mL || !(typeof mL === 'number') || mL <= 0) {\n      mL = Infinity;\n    }\n\n    this[MAX] = mL;\n    trim(this);\n  },\n  get: function () {\n    return this[MAX];\n  },\n  enumerable: true\n});\nObject.defineProperty(LRUCache.prototype, 'allowStale', {\n  set: function (allowStale) {\n    this[ALLOW_STALE] = !!allowStale;\n  },\n  get: function () {\n    return this[ALLOW_STALE];\n  },\n  enumerable: true\n});\nObject.defineProperty(LRUCache.prototype, 'maxAge', {\n  set: function (mA) {\n    if (!mA || !(typeof mA === 'number') || mA < 0) {\n      mA = 0;\n    }\n\n    this[MAX_AGE] = mA;\n    trim(this);\n  },\n  get: function () {\n    return this[MAX_AGE];\n  },\n  enumerable: true\n}); // resize the cache when the lengthCalculator changes.\n\nObject.defineProperty(LRUCache.prototype, 'lengthCalculator', {\n  set: function (lC) {\n    if (typeof lC !== 'function') {\n      lC = naiveLength;\n    }\n\n    if (lC !== this[LENGTH_CALCULATOR]) {\n      this[LENGTH_CALCULATOR] = lC;\n      this[LENGTH] = 0;\n      this[LRU_LIST].forEach(function (hit) {\n        hit.length = this[LENGTH_CALCULATOR](hit.value, hit.key);\n        this[LENGTH] += hit.length;\n      }, this);\n    }\n\n    trim(this);\n  },\n  get: function () {\n    return this[LENGTH_CALCULATOR];\n  },\n  enumerable: true\n});\nObject.defineProperty(LRUCache.prototype, 'length', {\n  get: function () {\n    return this[LENGTH];\n  },\n  enumerable: true\n});\nObject.defineProperty(LRUCache.prototype, 'itemCount', {\n  get: function () {\n    return this[LRU_LIST].length;\n  },\n  enumerable: true\n});\n\nLRUCache.prototype.rforEach = function (fn, thisp) {\n  thisp = thisp || this;\n\n  for (var walker = this[LRU_LIST].tail; walker !== null;) {\n    var prev = walker.prev;\n    forEachStep(this, fn, walker, thisp);\n    walker = prev;\n  }\n};\n\nfunction forEachStep(self, fn, node, thisp) {\n  var hit = node.value;\n\n  if (isStale(self, hit)) {\n    del(self, node);\n\n    if (!self[ALLOW_STALE]) {\n      hit = undefined;\n    }\n  }\n\n  if (hit) {\n    fn.call(thisp, hit.value, hit.key, self);\n  }\n}\n\nLRUCache.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this;\n\n  for (var walker = this[LRU_LIST].head; walker !== null;) {\n    var next = walker.next;\n    forEachStep(this, fn, walker, thisp);\n    walker = next;\n  }\n};\n\nLRUCache.prototype.keys = function () {\n  return this[LRU_LIST].toArray().map(function (k) {\n    return k.key;\n  }, this);\n};\n\nLRUCache.prototype.values = function () {\n  return this[LRU_LIST].toArray().map(function (k) {\n    return k.value;\n  }, this);\n};\n\nLRUCache.prototype.reset = function () {\n  if (this[DISPOSE] && this[LRU_LIST] && this[LRU_LIST].length) {\n    this[LRU_LIST].forEach(function (hit) {\n      this[DISPOSE](hit.key, hit.value);\n    }, this);\n  }\n\n  this[CACHE] = new Map(); // hash of items by key\n\n  this[LRU_LIST] = new Yallist(); // list of items in order of use recency\n\n  this[LENGTH] = 0; // length of items in the list\n};\n\nLRUCache.prototype.dump = function () {\n  return this[LRU_LIST].map(function (hit) {\n    if (!isStale(this, hit)) {\n      return {\n        k: hit.key,\n        v: hit.value,\n        e: hit.now + (hit.maxAge || 0)\n      };\n    }\n  }, this).toArray().filter(function (h) {\n    return h;\n  });\n};\n\nLRUCache.prototype.dumpLru = function () {\n  return this[LRU_LIST];\n};\n/* istanbul ignore next */\n\n\nLRUCache.prototype.inspect = function (n, opts) {\n  var str = 'LRUCache {';\n  var extras = false;\n  var as = this[ALLOW_STALE];\n\n  if (as) {\n    str += '\\n  allowStale: true';\n    extras = true;\n  }\n\n  var max = this[MAX];\n\n  if (max && max !== Infinity) {\n    if (extras) {\n      str += ',';\n    }\n\n    str += '\\n  max: ' + util.inspect(max, opts);\n    extras = true;\n  }\n\n  var maxAge = this[MAX_AGE];\n\n  if (maxAge) {\n    if (extras) {\n      str += ',';\n    }\n\n    str += '\\n  maxAge: ' + util.inspect(maxAge, opts);\n    extras = true;\n  }\n\n  var lc = this[LENGTH_CALCULATOR];\n\n  if (lc && lc !== naiveLength) {\n    if (extras) {\n      str += ',';\n    }\n\n    str += '\\n  length: ' + util.inspect(this[LENGTH], opts);\n    extras = true;\n  }\n\n  var didFirst = false;\n  this[LRU_LIST].forEach(function (item) {\n    if (didFirst) {\n      str += ',\\n  ';\n    } else {\n      if (extras) {\n        str += ',\\n';\n      }\n\n      didFirst = true;\n      str += '\\n  ';\n    }\n\n    var key = util.inspect(item.key).split('\\n').join('\\n  ');\n    var val = {\n      value: item.value\n    };\n\n    if (item.maxAge !== maxAge) {\n      val.maxAge = item.maxAge;\n    }\n\n    if (lc !== naiveLength) {\n      val.length = item.length;\n    }\n\n    if (isStale(this, item)) {\n      val.stale = true;\n    }\n\n    val = util.inspect(val, opts).split('\\n').join('\\n  ');\n    str += key + ' => ' + val;\n  });\n\n  if (didFirst || extras) {\n    str += '\\n';\n  }\n\n  str += '}';\n  return str;\n};\n\nLRUCache.prototype.set = function (key, value, maxAge) {\n  maxAge = maxAge || this[MAX_AGE];\n  var now = maxAge ? Date.now() : 0;\n  var len = this[LENGTH_CALCULATOR](value, key);\n\n  if (this[CACHE].has(key)) {\n    if (len > this[MAX]) {\n      del(this, this[CACHE].get(key));\n      return false;\n    }\n\n    var node = this[CACHE].get(key);\n    var item = node.value; // dispose of the old one before overwriting\n    // split out into 2 ifs for better coverage tracking\n\n    if (this[DISPOSE]) {\n      if (!this[NO_DISPOSE_ON_SET]) {\n        this[DISPOSE](key, item.value);\n      }\n    }\n\n    item.now = now;\n    item.maxAge = maxAge;\n    item.value = value;\n    this[LENGTH] += len - item.length;\n    item.length = len;\n    this.get(key);\n    trim(this);\n    return true;\n  }\n\n  var hit = new Entry(key, value, len, now, maxAge); // oversized objects fall out of cache automatically.\n\n  if (hit.length > this[MAX]) {\n    if (this[DISPOSE]) {\n      this[DISPOSE](key, value);\n    }\n\n    return false;\n  }\n\n  this[LENGTH] += hit.length;\n  this[LRU_LIST].unshift(hit);\n  this[CACHE].set(key, this[LRU_LIST].head);\n  trim(this);\n  return true;\n};\n\nLRUCache.prototype.has = function (key) {\n  if (!this[CACHE].has(key)) return false;\n  var hit = this[CACHE].get(key).value;\n\n  if (isStale(this, hit)) {\n    return false;\n  }\n\n  return true;\n};\n\nLRUCache.prototype.get = function (key) {\n  return get(this, key, true);\n};\n\nLRUCache.prototype.peek = function (key) {\n  return get(this, key, false);\n};\n\nLRUCache.prototype.pop = function () {\n  var node = this[LRU_LIST].tail;\n  if (!node) return null;\n  del(this, node);\n  return node.value;\n};\n\nLRUCache.prototype.del = function (key) {\n  del(this, this[CACHE].get(key));\n};\n\nLRUCache.prototype.load = function (arr) {\n  // reset the cache\n  this.reset();\n  var now = Date.now(); // A previous serialized cache has the most recent items first\n\n  for (var l = arr.length - 1; l >= 0; l--) {\n    var hit = arr[l];\n    var expiresAt = hit.e || 0;\n\n    if (expiresAt === 0) {\n      // the item was created without expiration in a non aged cache\n      this.set(hit.k, hit.v);\n    } else {\n      var maxAge = expiresAt - now; // dont add already expired items\n\n      if (maxAge > 0) {\n        this.set(hit.k, hit.v, maxAge);\n      }\n    }\n  }\n};\n\nLRUCache.prototype.prune = function () {\n  var self = this;\n  this[CACHE].forEach(function (value, key) {\n    get(self, key, false);\n  });\n};\n\nfunction get(self, key, doUse) {\n  var node = self[CACHE].get(key);\n\n  if (node) {\n    var hit = node.value;\n\n    if (isStale(self, hit)) {\n      del(self, node);\n      if (!self[ALLOW_STALE]) hit = undefined;\n    } else {\n      if (doUse) {\n        self[LRU_LIST].unshiftNode(node);\n      }\n    }\n\n    if (hit) hit = hit.value;\n  }\n\n  return hit;\n}\n\nfunction isStale(self, hit) {\n  if (!hit || !hit.maxAge && !self[MAX_AGE]) {\n    return false;\n  }\n\n  var stale = false;\n  var diff = Date.now() - hit.now;\n\n  if (hit.maxAge) {\n    stale = diff > hit.maxAge;\n  } else {\n    stale = self[MAX_AGE] && diff > self[MAX_AGE];\n  }\n\n  return stale;\n}\n\nfunction trim(self) {\n  if (self[LENGTH] > self[MAX]) {\n    for (var walker = self[LRU_LIST].tail; self[LENGTH] > self[MAX] && walker !== null;) {\n      // We know that we're about to delete this one, and also\n      // what the next least recently used key will be, so just\n      // go ahead and set it now.\n      var prev = walker.prev;\n      del(self, walker);\n      walker = prev;\n    }\n  }\n}\n\nfunction del(self, node) {\n  if (node) {\n    var hit = node.value;\n\n    if (self[DISPOSE]) {\n      self[DISPOSE](hit.key, hit.value);\n    }\n\n    self[LENGTH] -= hit.length;\n    self[CACHE].delete(hit.key);\n    self[LRU_LIST].removeNode(node);\n  }\n} // classy, since V8 prefers predictable objects.\n\n\nfunction Entry(key, value, length, now, maxAge) {\n  this.key = key;\n  this.value = value;\n  this.length = length;\n  this.now = now;\n  this.maxAge = maxAge || 0;\n}","map":{"version":3,"sources":["Z:/Projects/Rakuten Hack/EtherealHeal/Complete Project/client/node_modules/lru-cache/index.js"],"names":["module","exports","LRUCache","Map","require","util","Yallist","hasSymbol","Symbol","process","env","_nodeLRUCacheForceNoSymbol","makeSymbol","key","MAX","LENGTH","LENGTH_CALCULATOR","ALLOW_STALE","MAX_AGE","DISPOSE","NO_DISPOSE_ON_SET","LRU_LIST","CACHE","naiveLength","options","max","Infinity","lc","length","stale","maxAge","dispose","noDisposeOnSet","reset","Object","defineProperty","prototype","set","mL","trim","get","enumerable","allowStale","mA","lC","forEach","hit","value","rforEach","fn","thisp","walker","tail","prev","forEachStep","self","node","isStale","del","undefined","call","head","next","keys","toArray","map","k","values","dump","v","e","now","filter","h","dumpLru","inspect","n","opts","str","extras","as","didFirst","item","split","join","val","Date","len","has","Entry","unshift","peek","pop","load","arr","l","expiresAt","prune","doUse","unshiftNode","diff","delete","removeNode"],"mappings":"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","sourcesContent":["'use strict'\n\nmodule.exports = LRUCache\n\n// This will be a proper iterable 'Map' in engines that support it,\n// or a fakey-fake PseudoMap in older versions.\nvar Map = require('pseudomap')\nvar util = require('util')\n\n// A linked list to keep track of recently-used-ness\nvar Yallist = require('yallist')\n\n// use symbols if possible, otherwise just _props\nvar hasSymbol = typeof Symbol === 'function' && process.env._nodeLRUCacheForceNoSymbol !== '1'\nvar makeSymbol\nif (hasSymbol) {\n  makeSymbol = function (key) {\n    return Symbol(key)\n  }\n} else {\n  makeSymbol = function (key) {\n    return '_' + key\n  }\n}\n\nvar MAX = makeSymbol('max')\nvar LENGTH = makeSymbol('length')\nvar LENGTH_CALCULATOR = makeSymbol('lengthCalculator')\nvar ALLOW_STALE = makeSymbol('allowStale')\nvar MAX_AGE = makeSymbol('maxAge')\nvar DISPOSE = makeSymbol('dispose')\nvar NO_DISPOSE_ON_SET = makeSymbol('noDisposeOnSet')\nvar LRU_LIST = makeSymbol('lruList')\nvar CACHE = makeSymbol('cache')\n\nfunction naiveLength () { return 1 }\n\n// lruList is a yallist where the head is the youngest\n// item, and the tail is the oldest.  the list contains the Hit\n// objects as the entries.\n// Each Hit object has a reference to its Yallist.Node.  This\n// never changes.\n//\n// cache is a Map (or PseudoMap) that matches the keys to\n// the Yallist.Node object.\nfunction LRUCache (options) {\n  if (!(this instanceof LRUCache)) {\n    return new LRUCache(options)\n  }\n\n  if (typeof options === 'number') {\n    options = { max: options }\n  }\n\n  if (!options) {\n    options = {}\n  }\n\n  var max = this[MAX] = options.max\n  // Kind of weird to have a default max of Infinity, but oh well.\n  if (!max ||\n      !(typeof max === 'number') ||\n      max <= 0) {\n    this[MAX] = Infinity\n  }\n\n  var lc = options.length || naiveLength\n  if (typeof lc !== 'function') {\n    lc = naiveLength\n  }\n  this[LENGTH_CALCULATOR] = lc\n\n  this[ALLOW_STALE] = options.stale || false\n  this[MAX_AGE] = options.maxAge || 0\n  this[DISPOSE] = options.dispose\n  this[NO_DISPOSE_ON_SET] = options.noDisposeOnSet || false\n  this.reset()\n}\n\n// resize the cache when the max changes.\nObject.defineProperty(LRUCache.prototype, 'max', {\n  set: function (mL) {\n    if (!mL || !(typeof mL === 'number') || mL <= 0) {\n      mL = Infinity\n    }\n    this[MAX] = mL\n    trim(this)\n  },\n  get: function () {\n    return this[MAX]\n  },\n  enumerable: true\n})\n\nObject.defineProperty(LRUCache.prototype, 'allowStale', {\n  set: function (allowStale) {\n    this[ALLOW_STALE] = !!allowStale\n  },\n  get: function () {\n    return this[ALLOW_STALE]\n  },\n  enumerable: true\n})\n\nObject.defineProperty(LRUCache.prototype, 'maxAge', {\n  set: function (mA) {\n    if (!mA || !(typeof mA === 'number') || mA < 0) {\n      mA = 0\n    }\n    this[MAX_AGE] = mA\n    trim(this)\n  },\n  get: function () {\n    return this[MAX_AGE]\n  },\n  enumerable: true\n})\n\n// resize the cache when the lengthCalculator changes.\nObject.defineProperty(LRUCache.prototype, 'lengthCalculator', {\n  set: function (lC) {\n    if (typeof lC !== 'function') {\n      lC = naiveLength\n    }\n    if (lC !== this[LENGTH_CALCULATOR]) {\n      this[LENGTH_CALCULATOR] = lC\n      this[LENGTH] = 0\n      this[LRU_LIST].forEach(function (hit) {\n        hit.length = this[LENGTH_CALCULATOR](hit.value, hit.key)\n        this[LENGTH] += hit.length\n      }, this)\n    }\n    trim(this)\n  },\n  get: function () { return this[LENGTH_CALCULATOR] },\n  enumerable: true\n})\n\nObject.defineProperty(LRUCache.prototype, 'length', {\n  get: function () { return this[LENGTH] },\n  enumerable: true\n})\n\nObject.defineProperty(LRUCache.prototype, 'itemCount', {\n  get: function () { return this[LRU_LIST].length },\n  enumerable: true\n})\n\nLRUCache.prototype.rforEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this[LRU_LIST].tail; walker !== null;) {\n    var prev = walker.prev\n    forEachStep(this, fn, walker, thisp)\n    walker = prev\n  }\n}\n\nfunction forEachStep (self, fn, node, thisp) {\n  var hit = node.value\n  if (isStale(self, hit)) {\n    del(self, node)\n    if (!self[ALLOW_STALE]) {\n      hit = undefined\n    }\n  }\n  if (hit) {\n    fn.call(thisp, hit.value, hit.key, self)\n  }\n}\n\nLRUCache.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this[LRU_LIST].head; walker !== null;) {\n    var next = walker.next\n    forEachStep(this, fn, walker, thisp)\n    walker = next\n  }\n}\n\nLRUCache.prototype.keys = function () {\n  return this[LRU_LIST].toArray().map(function (k) {\n    return k.key\n  }, this)\n}\n\nLRUCache.prototype.values = function () {\n  return this[LRU_LIST].toArray().map(function (k) {\n    return k.value\n  }, this)\n}\n\nLRUCache.prototype.reset = function () {\n  if (this[DISPOSE] &&\n      this[LRU_LIST] &&\n      this[LRU_LIST].length) {\n    this[LRU_LIST].forEach(function (hit) {\n      this[DISPOSE](hit.key, hit.value)\n    }, this)\n  }\n\n  this[CACHE] = new Map() // hash of items by key\n  this[LRU_LIST] = new Yallist() // list of items in order of use recency\n  this[LENGTH] = 0 // length of items in the list\n}\n\nLRUCache.prototype.dump = function () {\n  return this[LRU_LIST].map(function (hit) {\n    if (!isStale(this, hit)) {\n      return {\n        k: hit.key,\n        v: hit.value,\n        e: hit.now + (hit.maxAge || 0)\n      }\n    }\n  }, this).toArray().filter(function (h) {\n    return h\n  })\n}\n\nLRUCache.prototype.dumpLru = function () {\n  return this[LRU_LIST]\n}\n\n/* istanbul ignore next */\nLRUCache.prototype.inspect = function (n, opts) {\n  var str = 'LRUCache {'\n  var extras = false\n\n  var as = this[ALLOW_STALE]\n  if (as) {\n    str += '\\n  allowStale: true'\n    extras = true\n  }\n\n  var max = this[MAX]\n  if (max && max !== Infinity) {\n    if (extras) {\n      str += ','\n    }\n    str += '\\n  max: ' + util.inspect(max, opts)\n    extras = true\n  }\n\n  var maxAge = this[MAX_AGE]\n  if (maxAge) {\n    if (extras) {\n      str += ','\n    }\n    str += '\\n  maxAge: ' + util.inspect(maxAge, opts)\n    extras = true\n  }\n\n  var lc = this[LENGTH_CALCULATOR]\n  if (lc && lc !== naiveLength) {\n    if (extras) {\n      str += ','\n    }\n    str += '\\n  length: ' + util.inspect(this[LENGTH], opts)\n    extras = true\n  }\n\n  var didFirst = false\n  this[LRU_LIST].forEach(function (item) {\n    if (didFirst) {\n      str += ',\\n  '\n    } else {\n      if (extras) {\n        str += ',\\n'\n      }\n      didFirst = true\n      str += '\\n  '\n    }\n    var key = util.inspect(item.key).split('\\n').join('\\n  ')\n    var val = { value: item.value }\n    if (item.maxAge !== maxAge) {\n      val.maxAge = item.maxAge\n    }\n    if (lc !== naiveLength) {\n      val.length = item.length\n    }\n    if (isStale(this, item)) {\n      val.stale = true\n    }\n\n    val = util.inspect(val, opts).split('\\n').join('\\n  ')\n    str += key + ' => ' + val\n  })\n\n  if (didFirst || extras) {\n    str += '\\n'\n  }\n  str += '}'\n\n  return str\n}\n\nLRUCache.prototype.set = function (key, value, maxAge) {\n  maxAge = maxAge || this[MAX_AGE]\n\n  var now = maxAge ? Date.now() : 0\n  var len = this[LENGTH_CALCULATOR](value, key)\n\n  if (this[CACHE].has(key)) {\n    if (len > this[MAX]) {\n      del(this, this[CACHE].get(key))\n      return false\n    }\n\n    var node = this[CACHE].get(key)\n    var item = node.value\n\n    // dispose of the old one before overwriting\n    // split out into 2 ifs for better coverage tracking\n    if (this[DISPOSE]) {\n      if (!this[NO_DISPOSE_ON_SET]) {\n        this[DISPOSE](key, item.value)\n      }\n    }\n\n    item.now = now\n    item.maxAge = maxAge\n    item.value = value\n    this[LENGTH] += len - item.length\n    item.length = len\n    this.get(key)\n    trim(this)\n    return true\n  }\n\n  var hit = new Entry(key, value, len, now, maxAge)\n\n  // oversized objects fall out of cache automatically.\n  if (hit.length > this[MAX]) {\n    if (this[DISPOSE]) {\n      this[DISPOSE](key, value)\n    }\n    return false\n  }\n\n  this[LENGTH] += hit.length\n  this[LRU_LIST].unshift(hit)\n  this[CACHE].set(key, this[LRU_LIST].head)\n  trim(this)\n  return true\n}\n\nLRUCache.prototype.has = function (key) {\n  if (!this[CACHE].has(key)) return false\n  var hit = this[CACHE].get(key).value\n  if (isStale(this, hit)) {\n    return false\n  }\n  return true\n}\n\nLRUCache.prototype.get = function (key) {\n  return get(this, key, true)\n}\n\nLRUCache.prototype.peek = function (key) {\n  return get(this, key, false)\n}\n\nLRUCache.prototype.pop = function () {\n  var node = this[LRU_LIST].tail\n  if (!node) return null\n  del(this, node)\n  return node.value\n}\n\nLRUCache.prototype.del = function (key) {\n  del(this, this[CACHE].get(key))\n}\n\nLRUCache.prototype.load = function (arr) {\n  // reset the cache\n  this.reset()\n\n  var now = Date.now()\n  // A previous serialized cache has the most recent items first\n  for (var l = arr.length - 1; l >= 0; l--) {\n    var hit = arr[l]\n    var expiresAt = hit.e || 0\n    if (expiresAt === 0) {\n      // the item was created without expiration in a non aged cache\n      this.set(hit.k, hit.v)\n    } else {\n      var maxAge = expiresAt - now\n      // dont add already expired items\n      if (maxAge > 0) {\n        this.set(hit.k, hit.v, maxAge)\n      }\n    }\n  }\n}\n\nLRUCache.prototype.prune = function () {\n  var self = this\n  this[CACHE].forEach(function (value, key) {\n    get(self, key, false)\n  })\n}\n\nfunction get (self, key, doUse) {\n  var node = self[CACHE].get(key)\n  if (node) {\n    var hit = node.value\n    if (isStale(self, hit)) {\n      del(self, node)\n      if (!self[ALLOW_STALE]) hit = undefined\n    } else {\n      if (doUse) {\n        self[LRU_LIST].unshiftNode(node)\n      }\n    }\n    if (hit) hit = hit.value\n  }\n  return hit\n}\n\nfunction isStale (self, hit) {\n  if (!hit || (!hit.maxAge && !self[MAX_AGE])) {\n    return false\n  }\n  var stale = false\n  var diff = Date.now() - hit.now\n  if (hit.maxAge) {\n    stale = diff > hit.maxAge\n  } else {\n    stale = self[MAX_AGE] && (diff > self[MAX_AGE])\n  }\n  return stale\n}\n\nfunction trim (self) {\n  if (self[LENGTH] > self[MAX]) {\n    for (var walker = self[LRU_LIST].tail;\n      self[LENGTH] > self[MAX] && walker !== null;) {\n      // We know that we're about to delete this one, and also\n      // what the next least recently used key will be, so just\n      // go ahead and set it now.\n      var prev = walker.prev\n      del(self, walker)\n      walker = prev\n    }\n  }\n}\n\nfunction del (self, node) {\n  if (node) {\n    var hit = node.value\n    if (self[DISPOSE]) {\n      self[DISPOSE](hit.key, hit.value)\n    }\n    self[LENGTH] -= hit.length\n    self[CACHE].delete(hit.key)\n    self[LRU_LIST].removeNode(node)\n  }\n}\n\n// classy, since V8 prefers predictable objects.\nfunction Entry (key, value, length, now, maxAge) {\n  this.key = key\n  this.value = value\n  this.length = length\n  this.now = now\n  this.maxAge = maxAge || 0\n}\n"]},"metadata":{},"sourceType":"script"}