{"ast":null,"code":"'use strict';\n\nfunction requireCommands() {\n  const cmds = {\n    // Files (not MFS)\n    add: require('../files/add'),\n    addReadableStream: require('../files/add-readable-stream'),\n    addPullStream: require('../files/add-pull-stream'),\n    cat: require('../files/cat'),\n    catReadableStream: require('../files/cat-readable-stream'),\n    catPullStream: require('../files/cat-pull-stream'),\n    get: require('../files/get'),\n    getReadableStream: require('../files/get-readable-stream'),\n    getPullStream: require('../files/get-pull-stream'),\n    ls: require('../ls'),\n    lsReadableStream: require('../ls-readable-stream'),\n    lsPullStream: require('../ls-pull-stream'),\n    bitswap: require('../bitswap'),\n    block: require('../block'),\n    bootstrap: require('../bootstrap'),\n    commands: require('../commands'),\n    config: require('../config'),\n    dag: require('../dag'),\n    dht: require('../dht'),\n    diag: require('../diag'),\n    id: require('../id'),\n    key: require('../key'),\n    log: require('../log'),\n    mount: require('../mount'),\n    name: require('../name'),\n    object: require('../object'),\n    pin: require('../pin'),\n    ping: require('../ping'),\n    pingReadableStream: require('../ping-readable-stream'),\n    pingPullStream: require('../ping-pull-stream'),\n    refs: require('../refs'),\n    repo: require('../repo'),\n    stop: require('../stop'),\n    stats: require('../stats'),\n    swarm: require('../swarm'),\n    pubsub: require('../pubsub'),\n    update: require('../update'),\n    version: require('../version'),\n    types: require('../types'),\n    resolve: require('../resolve'),\n    dns: require('../dns')\n  }; // shutdown is an alias for stop\n\n  cmds.shutdown = cmds.stop; // TODO: crowding the 'files' namespace temporarily for interface-ipfs-core\n  // compatibility, until 'files vs mfs' naming decision is resolved.\n\n  cmds.files = function (send) {\n    const files = require('../files')(send);\n\n    return files;\n  };\n\n  cmds.util = function (send, config) {\n    const util = {\n      addFromFs: require('../util/fs-add')(send),\n      addFromStream: require('../files/add')(send),\n      addFromURL: require('../util/url-add')(send),\n      getEndpointConfig: require('../util/get-endpoint-config')(config),\n      crypto: require('libp2p-crypto'),\n      isIPFS: require('is-ipfs')\n    };\n    return util;\n  };\n\n  return cmds;\n}\n\nfunction loadCommands(send, config) {\n  const files = requireCommands();\n  const cmds = {};\n  Object.keys(files).forEach(file => {\n    cmds[file] = files[file](send, config);\n  });\n  return cmds;\n}\n\nmodule.exports = loadCommands;","map":{"version":3,"sources":["Z:/Projects/Organ-Donation-Transplant-Chain-master/Complete Project/client/node_modules/ipfs-api/src/utils/load-commands.js"],"names":["requireCommands","cmds","add","require","addReadableStream","addPullStream","cat","catReadableStream","catPullStream","get","getReadableStream","getPullStream","ls","lsReadableStream","lsPullStream","bitswap","block","bootstrap","commands","config","dag","dht","diag","id","key","log","mount","name","object","pin","ping","pingReadableStream","pingPullStream","refs","repo","stop","stats","swarm","pubsub","update","version","types","resolve","dns","shutdown","files","send","util","addFromFs","addFromStream","addFromURL","getEndpointConfig","crypto","isIPFS","loadCommands","Object","keys","forEach","file","module","exports"],"mappings":"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","sourcesContent":["'use strict'\n\nfunction requireCommands () {\n  const cmds = {\n    // Files (not MFS)\n    add: require('../files/add'),\n    addReadableStream: require('../files/add-readable-stream'),\n    addPullStream: require('../files/add-pull-stream'),\n    cat: require('../files/cat'),\n    catReadableStream: require('../files/cat-readable-stream'),\n    catPullStream: require('../files/cat-pull-stream'),\n    get: require('../files/get'),\n    getReadableStream: require('../files/get-readable-stream'),\n    getPullStream: require('../files/get-pull-stream'),\n    ls: require('../ls'),\n    lsReadableStream: require('../ls-readable-stream'),\n    lsPullStream: require('../ls-pull-stream'),\n\n    bitswap: require('../bitswap'),\n    block: require('../block'),\n    bootstrap: require('../bootstrap'),\n    commands: require('../commands'),\n    config: require('../config'),\n    dag: require('../dag'),\n    dht: require('../dht'),\n    diag: require('../diag'),\n    id: require('../id'),\n    key: require('../key'),\n    log: require('../log'),\n    mount: require('../mount'),\n    name: require('../name'),\n    object: require('../object'),\n    pin: require('../pin'),\n    ping: require('../ping'),\n    pingReadableStream: require('../ping-readable-stream'),\n    pingPullStream: require('../ping-pull-stream'),\n    refs: require('../refs'),\n    repo: require('../repo'),\n    stop: require('../stop'),\n    stats: require('../stats'),\n    swarm: require('../swarm'),\n    pubsub: require('../pubsub'),\n    update: require('../update'),\n    version: require('../version'),\n    types: require('../types'),\n    resolve: require('../resolve'),\n    dns: require('../dns')\n  }\n\n  // shutdown is an alias for stop\n  cmds.shutdown = cmds.stop\n\n  // TODO: crowding the 'files' namespace temporarily for interface-ipfs-core\n  // compatibility, until 'files vs mfs' naming decision is resolved.\n  cmds.files = function (send) {\n    const files = require('../files')(send)\n\n    return files\n  }\n\n  cmds.util = function (send, config) {\n    const util = {\n      addFromFs: require('../util/fs-add')(send),\n      addFromStream: require('../files/add')(send),\n      addFromURL: require('../util/url-add')(send),\n      getEndpointConfig: require('../util/get-endpoint-config')(config),\n      crypto: require('libp2p-crypto'),\n      isIPFS: require('is-ipfs')\n    }\n    return util\n  }\n\n  return cmds\n}\n\nfunction loadCommands (send, config) {\n  const files = requireCommands()\n  const cmds = {}\n\n  Object.keys(files).forEach((file) => {\n    cmds[file] = files[file](send, config)\n  })\n\n  return cmds\n}\n\nmodule.exports = loadCommands\n"]},"metadata":{},"sourceType":"script"}